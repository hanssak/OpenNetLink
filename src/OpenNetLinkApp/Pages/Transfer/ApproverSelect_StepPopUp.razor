@using OpenNetLinkApp.Services
@inject IJSRuntime JSRuntime
@inject XmlConfService XmlConf

<div class="modal fade" id="ApproverSelect_StepPopUp">
    <div class="modal-dialog modal-dialog">
        <div class="modal-content">
            <div class="modal-header modal-outline pl-3 pr-3">
                <h5 class="modal-title pt-1 text-bold ">@strApproverSearch</h5>                                 <!--결재자 조회-->
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="closePopUp">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- content -->
                <!-- s------------------------------------------------------------------------------------------------------  -->

                <div class="card-body p-0">


                    <!--s table -->
                    <div class="box1" style=" width:46%;  float:left;">
                        <div class="d-inline-flex  mb-2 " style="height:28px;">
                            <label class="p-1">@strDept</label>                                                       <!--부서-->
                            <input type="text" class="form-control col-md-4" placeholder="부서입력">
                            <label class="p-1 pl-2">@strName</label>                                                  <!--이름-->
                            <input type="text" class="form-control col-md-3" placeholder="이름입력">
                            <button type="button" class="btn bg-gradient-secondary ml-1"><i class="fas fa-search pr-1 pl-1"></i>@strSearch</button>         <!--조회-->
                        </div>

                        <div class="card-body table-responsive p-0 " style="height:392px; border:1px solid #ddd; background-color:#fff;">
                            <table class="table table-head-fixed">
                                <colgroup>
                                    <col width="">
                                    <col width="">
                                    <col width="">
                                    <col width="">
                                </colgroup>
                                <thead>
                                    <tr>
                                        <th>@strOrder </th>                <!--순번-->
                                        <th>@strDept </th>                <!--부서-->
                                        <th>@strRank </th>                <!--직급-->
                                        <th>@strName </th>                <!--이름-->
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (ApproverInfo3 item in ApproverSearch)
                                    {
                                        <tr name="trItem3" draggable="false" data-draggable="tritem" aria-grabbed="false" value="@item.Index">
                                            <td>@item.Index</td>
                                            <td>@item.DeptName</td>
                                            <td>@item.Grade</td>
                                            <td>@item.Name</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>



                    </div>
                    <!--e table -->
                    <!--s btn -->
                    <div class="box2" style=" width:8%; height:300px; float:left;">
                        <div class="col-md-12 text-center" style="top:50% !important;">
                            <button @onclick="AddSelectApprover" type="button" class="btn bg-gradient-primary mb-3"><i class="fas fa-angle-right fa-2x"></i></button>
                            <button @onclick="RemoveAssignApprover" type="button" class="btn bg-gradient-primary"><i class="fas fa-angle-left fa-2x"></i></button>
                        </div>
                    </div>
                    <!--e btn -->
                    <!--s table -->
                    <div class="box1" style=" width:46%;  float:left;">
                        <div class="row mb-2  ">
                            <div class="col-md-5 text-right">
                                <!--
                                <button type="button" class="btn bg-gradient-secondary mr-0"><i class="fas fa-chevron-circle-up  pr-1 pl-1"></i></button>
                                <button type="button" class="btn bg-gradient-secondary"><i class="fas fa-chevron-circle-down  pr-1 pl-1"></i></button>
                                -->
                            </div>
                            <div class="col-md-7 text-right">
                                <button type="button" class="btn bg-gradient-secondary" @onclick="AddTargetGroup"><i class="fas fa-search pr-1 pl-1"></i>@strGroupAdd</button>   <!--그룹추가-->
                            </div>

                        </div>

                        <div class="card-body table-responsive p-0" style="height:392px; border:1px solid #ddd; background-color:#fff;">

                            <!--  s step 01 -------------------------------------------------------------------------------------------------------------------------------------- -->
                            @foreach (ApproverGroup item in ApvGroup)
                            {
                                <div aria-grabbed="@(item.seqGrp == Int32.Parse(CurrentDivSeq) ? "true" : "false")" name="TargetGropDiv-@(item.seqGrp)" data-draggable="divGroup" value="@item.seqGrp" class="card @item.groupTheme() shadow">
                                    <div class="card-header pt-1 pb-1">
                                        <h6 class="step-title">Step @item.seqGrp</h6>
                                        <div class="card-tools  pr-2">
                                            <button type="button" class="btn btn-tool fa-xs" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                                            <button type="button" class="btn btn-tool fa-xs" data-card-widget="remove"><i class="fas fa-times"></i></button>
                                        </div>
                                    </div>
                                    <div class="card-body p-2">
                                        <div class="col-md-12 p-0 mb-2">
                                            <label class=" pt-1 pl-2">@item.groupTitle()</label>
                                            <div class="btn-group float-right">
                                                <button @onclick="moveToTop" type="button" class="btn btn-default step_btn"><i class="fas fa-angle-double-up pr-2"></i></button>
                                                <button @onclick="moveToUpper" type="button" class="btn btn-default step_btn"><i class="fas fa-arrow-up pr-1"></i></button>
                                                <button @onclick="moveToLower" type="button" class="btn btn-default step_btn"><i class="fas fa-arrow-down pr-1"></i></button>
                                                <button @onclick="moveToBottom" type="button" class="btn btn-default step_btn"><i class="fas fa-angle-double-down pr-2"></i></button>
                                            </div>

                                        </div>

                                        <div class="col-md-12 card-body p-0" style="height:auto;border:1px solid #ddd; background-color:#fff;">
                                            <table class="table gray">
                                                <colgroup>
                                                    <col width="">
                                                    <col width="">
                                                    <col width="">
                                                </colgroup>
                                                <thead>
                                                    <tr>
                                                        <th>@strDept </th>     <!--부서-->
                                                        <th>@strRank </th>     <!--직급-->
                                                        <th>@strName </th>     <!--이름-->
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (ApproverInfo3 subitem in item.ApproverSelect)
                                                    {
                                                        <tr aria-grabbed="@(item.seqGrp == Int32.Parse(CurrentDivSeq) && subitem.Index == CurrentTagetSeq  ? "true" : "false")" name="trSelect3" draggable="false" data-draggable="tritem" value="@subitem.Index">
                                                            <td>@subitem.DeptName</td>
                                                            <td>@subitem.Grade</td>
                                                            <td>@subitem.Name</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>

                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                    <!--e table -->
                </div>

                <!--/. content -->
            </div>


            <div class="modal-footer">
                <button type="button" class="btn btn-md btn-blue mr-0" @onclick="closePopUp"><i class="fas fa-check"></i>@strOK</button>
                <button type="button" class="btn btn-md btn-black mr-0" @onclick="closePopUp"><i class="fas fa-times"></i>@strClose</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
@code {
    private LinkedList<ApproverInfo3> ApproverSearch = new LinkedList<ApproverInfo3>();
    private List<ApproverGroup> ApvGroup = new List<ApproverGroup>();
    private static Action<string> actionApproverDivSelect;      //결재자 GROUP 선택
    private static Action<string> actionTargetSelect;           //결재자 SEQ
    private static Action<string> actionAssign;                 //조회대상 SEQ

    public string CurrentDivSeq { get; set; }
    public string CurrentTagetSeq { get; set; }
    public string stSelectApprover { get; set; }

    public string strApproverSearch = "";
    public string strDept = "";
    public string strName = "";
    public string strSearch = "";
    public string strOrder = "";
    public string strRank = "";
    public string strMostTop = "";
    public string strMostBottom = "";
    public string strTop = "";
    public string strDown = "";
    public string strOK = "";
    public string strClose = "";
    public string strGroupAdd = "";

    private void moveToTop()
    {
        if (CurrentDivSeq.Length < 1)
            return;

        ApproverGroup apvGroup = ApvGroup.FirstOrDefault(x => x.seqGrp == Int32.Parse(CurrentDivSeq));
        ApproverInfo3 apvAsign = apvGroup.ApproverSelect.FirstOrDefault(x => x.Index == CurrentTagetSeq);
        if (apvAsign != null)
        {
            JSRuntime.InvokeAsync<object>("adjustTargetSelection");
            apvGroup.ApproverSelect.Remove(apvAsign);
            apvGroup.ApproverSelect.AddFirst(apvAsign);
        }
        StateHasChanged();
    }

    private void moveToUpper()
    {
        if (CurrentDivSeq.Length < 1)
            return;

        ApproverGroup apvGroup = ApvGroup.FirstOrDefault(x => x.seqGrp == Int32.Parse(CurrentDivSeq));
        ApproverInfo3 apvAsign = apvGroup.ApproverSelect.FirstOrDefault(x => x.Index == CurrentTagetSeq);

        if (apvAsign != null)
        {
            //현재값으 앞에값을 구하기
            LinkedListNode<ApproverInfo3> current;
            LinkedListNode<ApproverInfo3> next;
            current = apvGroup.ApproverSelect.First;
            if (current.Value.Index == CurrentTagetSeq)
            {
                return;
            }

            for (int i = 0; i < apvGroup.ApproverSelect.Count; i++)
            {
                next = current.Next;
                if (next.Value.Index == CurrentTagetSeq)
                {
                    apvGroup.ApproverSelect.Remove(apvAsign);
                    apvGroup.ApproverSelect.AddBefore(current, apvAsign);
                    break;
                }
                else
                {
                    current = current.Next;
                }
            }
        }
        StateHasChanged();
    }
    private void moveToLower()
    {
        if (CurrentDivSeq.Length < 1)
            return;
        ApproverGroup apvGroup = ApvGroup.FirstOrDefault(x => x.seqGrp == Int32.Parse(CurrentDivSeq));
        ApproverInfo3 apvAsign = apvGroup.ApproverSelect.FirstOrDefault(x => x.Index == CurrentTagetSeq);

        if (apvAsign != null)
        {
            //현재값으 앞에값을 구하기
            LinkedListNode<ApproverInfo3> current;
            LinkedListNode<ApproverInfo3> next;
            LinkedListNode<ApproverInfo3> last;
            current = apvGroup.ApproverSelect.First;
            last = apvGroup.ApproverSelect.Last;
            if (last.Value.Index == CurrentTagetSeq)
            {
                return;
            }

            for (int i = 0; i < apvGroup.ApproverSelect.Count; i++)
            {
                next = current.Next;
                if (current.Value.Index == CurrentTagetSeq)
                {
                    apvGroup.ApproverSelect.Remove(apvAsign);
                    apvGroup.ApproverSelect.AddAfter(next, apvAsign);
                    break;
                }
                else
                {
                    current = current.Next;
                }
            }
        }
        StateHasChanged();
    }
    private void moveToBottom()
    {
        if (CurrentDivSeq.Length < 1)
            return;
        ApproverGroup apvGroup = ApvGroup.FirstOrDefault(x => x.seqGrp == Int32.Parse(CurrentDivSeq));
        ApproverInfo3 apvTarget = apvGroup.ApproverSelect.FirstOrDefault(x => x.Index == CurrentTagetSeq);
        if (apvTarget != null)
        {
            apvGroup.ApproverSelect.Remove(apvTarget);
            apvGroup.ApproverSelect.AddLast(apvTarget);
        }
        StateHasChanged();
    }


    private void AddSelectApprover()
    {
        if (stSelectApprover.Length < 1 || CurrentDivSeq.Length < 1)
            return;
        ApproverInfo3 apv = ApproverSearch.FirstOrDefault(x => x.Index == stSelectApprover);
        if (apv != null)
        {
            ApproverGroup apvGroup = ApvGroup.FirstOrDefault(x => x.seqGrp == Int32.Parse(CurrentDivSeq));

            if (apvGroup != null)
            {
                apvGroup.ApproverSelect.AddLast(apv);
            }
        }
    }

    private void RemoveAssignApprover()
    {
        ApproverGroup apvGroup = ApvGroup.FirstOrDefault(x => x.seqGrp == Int32.Parse(CurrentDivSeq));
        ApproverInfo3 apvAsign = apvGroup.ApproverSelect.FirstOrDefault(x => x.Index == CurrentTagetSeq);
        if (apvAsign != null)
        {
            apvGroup.ApproverSelect.Remove(apvAsign);
        }
    }

    [JSInvokable("ApproverSearchSelect3")]
    public static void ApproverSearchSelect3(string value)
    {
        actionAssign.Invoke(value);
    }

    private void AssignApprover(string value)
    {
        stSelectApprover = value;
    }

    [JSInvokable("ApproverTargetSelect3")]
    public static void ApproverTargetSelect3(string value)
    {
        actionTargetSelect.Invoke(value);
    }
    private void SelectTarget(string value)
    {
        CurrentTagetSeq = value;
        StateHasChanged();
    }



    [JSInvokable("ApproverDivSelect")]
    public static void ApproverDivSelect(string value)
    {
        actionApproverDivSelect.Invoke(value);
    }

    public void TargetDivSelect(string seq)
    {
        CurrentDivSeq = seq;
    }

    public class ApproverGroup
    {
        public int seqGrp { get; set; }
        public LinkedList<ApproverInfo3> ApproverSelect { get; set; }
        public string groupTheme()
        {
            if (seqGrp == 1) return "card-primary";
            else if (seqGrp == 2) return "card-secondary";
            else if (seqGrp == 3) return "card-success";
            else if (seqGrp == 4) return "card-info";
            else if (seqGrp == 5) return "card-warning";
            else if (seqGrp == 6) return "card-danger";
            else if (seqGrp == 7) return "card-light";
            else if (seqGrp == 7) return "card-dark";
            else return "card-primary";
        }
        public string groupTitle()
        {
            if (ApproverSelect.Count == 0)
                return "미지정";
            else if (ApproverSelect.Count == 1)
            {
                return ApproverSelect.First.Value.Name;
            }
            else
            {
                return ApproverSelect.First.Value.Name + " 외" + Convert.ToString(ApproverSelect.Count - 1) + "명";
            }
        }
    }
    private void AddTargetGroup()
    {
        ApproverGroup grp1 = new ApproverGroup();
        grp1.seqGrp = ApvGroup.Count + 1;
        LinkedList<ApproverInfo3> grp1Apv = new LinkedList<ApproverInfo3>();
        grp1.ApproverSelect = grp1Apv;
        ApvGroup.Add(grp1);
    }

    protected override void OnInitialized()
    {
        CurrentDivSeq = "0";
        CurrentTagetSeq = "0";

        actionAssign = AssignApprover;
        actionApproverDivSelect = TargetDivSelect;
        actionTargetSelect = SelectTarget;

        ApproverGroup grp1 = new ApproverGroup();
        grp1.seqGrp = 1;
        LinkedList<ApproverInfo3> grp1Apv = new LinkedList<ApproverInfo3>();
        grp1Apv.AddLast(new ApproverInfo3("001", "개발3팀", "사원", "1번님"));
        grp1Apv.AddLast(new ApproverInfo3("002", "개발3팀", "사원", "2번님"));
        grp1.ApproverSelect = grp1Apv;
        ApvGroup.Add(grp1);

        ApproverGroup grp2 = new ApproverGroup();
        grp2.seqGrp = 2;
        LinkedList<ApproverInfo3> grp2Apv = new LinkedList<ApproverInfo3>();
        grp2Apv.AddLast(new ApproverInfo3("003", "개발3팀", "사원", "3번님"));
        grp2Apv.AddLast(new ApproverInfo3("004", "개발3팀", "사원", "4번님"));
        grp2.ApproverSelect = grp2Apv;
        ApvGroup.Add(grp2);




        //actionAssign = AssignApprover;
        //actionTargetSelect = SelectTarget;

        ApproverSearch.AddLast(new ApproverInfo3("001", "개발3팀", "사원", "1번님"));
        ApproverSearch.AddLast(new ApproverInfo3("002", "개발3팀", "사원", "2번님"));
        ApproverSearch.AddLast(new ApproverInfo3("003", "개발3팀", "사원", "3번님"));
        ApproverSearch.AddLast(new ApproverInfo3("004", "개발3팀", "사원", "4번님"));
        ApproverSearch.AddLast(new ApproverInfo3("005", "개발3팀", "사원", "5번님"));
        ApproverSearch.AddLast(new ApproverInfo3("006", "개발3팀", "사원", "6번님"));
        ApproverSearch.AddLast(new ApproverInfo3("007", "개발3팀", "사원", "7번님"));
        ApproverSearch.AddLast(new ApproverInfo3("008", "개발3팀", "사원", "8번님"));
        ApproverSearch.AddLast(new ApproverInfo3("009", "개발3팀", "사원", "9번님"));
        ApproverSearch.AddLast(new ApproverInfo3("010", "개발3팀", "사원", "10번님"));
        ApproverSearch.AddLast(new ApproverInfo3("011", "개발3팀", "사원", "11번님"));
        ApproverSearch.AddLast(new ApproverInfo3("012", "개발3팀", "사원", "12번님"));
        ApproverSearch.AddLast(new ApproverInfo3("013", "개발3팀", "사원", "13번님"));
        ApproverSearch.AddLast(new ApproverInfo3("014", "개발3팀", "사원", "14번님"));
        ApproverSearch.AddLast(new ApproverInfo3("015", "개발3팀", "사원", "15번님"));
        ApproverSearch.AddLast(new ApproverInfo3("016", "개발3팀", "사원", "16번님"));
        ApproverSearch.AddLast(new ApproverInfo3("018", "개발3팀", "사원", "17번님"));
        ApproverSearch.AddLast(new ApproverInfo3("019", "개발3팀", "사원", "17번님"));

        //ApproverSelect.AddLast(new ApproverInfo("000", "개발3팀", "사원", "0번님"));

        InitText();
    }


    public async Task openPopUp()
    {
        object[] param = { "ApproverSelect_StepPopUp" };
        await JSRuntime.InvokeAsync<object>("openPopUp", param);
    }

    public void closePopUp()
    {
        object[] param = { "ApproverSelect_StepPopUp" };
        JSRuntime.InvokeAsync<object>("closePopUp", param);
    }


    public class ApproverInfo3
    {
        public ApproverInfo3(string index, string deptname, string grade, string name)
        {
            Index = index;
            DeptName = deptname;
            Grade = grade;
            Name = name;
        }

        public string Index { get; set; }
        public string DeptName { get; set; }
        public string Grade { get; set; }
        public string Name { get; set; }
    }

    public void InitText()
    {
        strApproverSearch = XmlConf.GetTitle("T_COMMON_APPROVESEARCH");             // 결재자 조회
        strDept = XmlConf.GetTitle("T_COMMON_DEPT");                                // 부서
        strName = XmlConf.GetTitle("T_COMMON_NAME");                                // 이름
        strSearch = XmlConf.GetTitle("T_COMMON_SEARCH");                            // 조회
        strOrder = XmlConf.GetTitle("T_COMMON_ORDER");                              // 순번
        strRank = XmlConf.GetTitle("T_COMMON_RANK");                                // 직급
        strMostTop = XmlConf.GetTitle("T_ETC_TOP");                                 // 맨위
        strMostBottom = XmlConf.GetTitle("T_ETC_BOTTOM");                           // 맨아래
        strTop = XmlConf.GetTitle("T_ETC_UP");                                      // 위
        strDown = XmlConf.GetTitle("T_ETC_DOWN");                                   // 아래
        strOK = XmlConf.GetTitle("T_COMMON_OK");                                    // 확인
        strClose = XmlConf.GetTitle("T_FILE_FOLD");                                 // 닫기
        strGroupAdd = XmlConf.GetTitle("T_APPROVE_GROUPADD");                       // 그룹추가
    }
}
@page "/pcurlManage"
@using OpenNetLinkApp.Data.SGQuery
@inject IJSRuntime jsRuntime
@inject XmlConfService XmlConf
@inject NavigationManager MyNavigationManager
@inject ISGAppManagerService SGAppMgrSvc
<div class="content-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">PCURL 관리</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item" style="color:blue;" @onclick="(e=>HomeMove())"><i class="fas fa-home mr-1"></i>HOME</li>
                    <li class="breadcrumb-item active">PCURL 관리</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- S file content -->
<section class="content">
    <div class="container-fluid">
        <!-- Info boxes -->

        <div class="row">
            <div class="col-12 col-sm-6 col-md-12">

                <div class="card card-primary card-outline mb-2 ">
                    <div class="card-body">


                        <table>
                            <colgroup>
                                <col width="*" span="9">
                                <col width="10%">
                            </colgroup>
                            <tr>
                                <th class="p-1 pt-2 float-right">기간</th>
                                <td>
                                    <input type="text" class="form-control col-md-5 float-left" id="datepicker" readonly value="2020-06-24" style="color:black;width:46%;">
                                    <span class="float-left col-md-1">-</span>
                                    <input type="text" class="form-control col-md-5 float-left" id="datepicker2" readonly value="2020-06-26" style="color:black;width:46%;">
                                </td>
                                <th class="p-1  pt-2 float-right"> 승인상태 </th>
                                <td>
                                    <select class="form-control" style="width:100px;">
                                        <option> 전체</option>
                                        <option> 승인</option>
                                        <option> 승인대기</option>
                                        <option> 반려</option>
                                        <option> 요청취소</option>
                                    </select>
                                </td>
                                <th class="p-1  pt-2 float-right"> URL </th>
                                <td colspan="3">
                                    <input type="text" class="form-control" placeholder="URL을 입력해 주세요.">
                                </td>
                            </tr>

                            <tr>
                                <th class="p-1 pt-3 float-right"> 요청사유 </th>
                                <td class="pt-2" colspan="5"><input type="text" class="form-control" placeholder="요청사유을 입력해 주세요."></td>
                            </tr>
                        </table>

                    </div>



                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-12">
                <div class="col-sm-12 text-right">
                    <button type="button" class="btn btn-md btn-black"><i class="fas fa-search"></i>@XmlConf.GetTitle("T_COMMON_SEARCH")</button>
                    <button type="button" class="btn btn-md bg-gradient-secondary"><i class="fas fa-check-circle pr-2"></i>URL신청</button>
                    <button type="button" class="btn btn-md bg-gradient-primary"><i class="fas fa-list pr-2"></i>URL리스트</button>
                </div>
            </div>
        </div>

        <!-- list -->

        <div class="row">



            <div class="col-md-12">
                <div class="card card-secondary  card-outline" style="height:100%;">


                    <form class="form-horizontal">

                        <div class="card-body p-0">
                            <table class="table table-head-fixed table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <!--<th style="text-align:center">
                                            <input class="input" type="checkbox">
                                        </th>-->
                                        <th style="text-align:center">승인상태</th>
                                        <th style="text-align:center">요청사유</th>
                                        <th style="text-align:center">대표 URL</th>
                                        <th style="text-align:center">승인요청일</th>
                                        <th style="text-align:center">승인일</th>
                                        <th style="text-align:center">상세보기</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (pcurlData item in mData)
                                    {
                                        <tr>
                                            <!--<td style="text-align:center">
                                                <input class="input" type="checkbox">
                                            </td>-->
                                            <td style="text-align:center">@item.ApvStatus</td>
                                            <td style="text-align:center">@item.ReqReason</td>
                                            <td style="text-align:center">@item.URL</td>
                                            <td style="text-align:center">@item.RequestTime</td>
                                            <td style="text-align:center">@item.ApproveTime</td>
                                            <td style="text-align:center"><button type="button" class="btn btn-default btn-xs pl-2 pr-2 pt-0 pb-0" @onclick="@(e=>OpenDetail(item.TransSeq))"><i class="fas fa-search"></i></button></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>


                        <div class="card-body pt-0">
                            <!--S page -->


                            <div style="padding-top:1.25rem;">
                                <div style="float:left;">
                                    <div class="dataTables_info" id="example2_info" role="status" aria-live="polite">총페이지 : @nViewPageNo/@nTotalPages</div>
                                </div>
                                <Pagenator ViewPageCount="@viewPageCount" DispLimit=@dispLimit NViewPageNo="@nViewPageNo"
                                           NTotalPages="@nTotalPages" NStartPage="@nStartPage"
                                           UpdateListPagingInvoke="UpdateList"></Pagenator>
                            </div>


                            <!--/.S page -->
                        </div>








                        <!--footer test-->
                        <Footer></Footer>
                        <!--./footer test-->
                        <!-- /.card-footer -->


                    </form>

                    <!-- /.card-body -->
                </div>
            </div>

        </div>

        <!--/.list -->
        <!-- /.row -->
    </div><!--/. container-fluid -->
</section>
<!-- /S. file content -->

<PcurlManagePopUp @ref="refPcurlManagePopUp"></PcurlManagePopUp>

@code {
    PcurlManagePopUp refPcurlManagePopUp;
    public int TotalCount { get; set; }
    public List<pcurlData> mData = new List<pcurlData>();
    private int nPageListCount = 10;    //리스트에 뿌려질 단위갯수
    private int nViewPageNo = 0;
    private int nTotalPages = 1;
    private int viewPageCount = 10;  //pageing 에 뿌려질 앵커갯수
    private int nStartPage = 1;
    private int dispLimit = 1;
    ISGSideBarUIService SideBarUISvc;

    private void UpdateList(int pageNumber)
    {
        nViewPageNo = pageNumber + 1;
        mData = ListData.Skip(pageNumber * nPageListCount).Take(nPageListCount).ToList();
    }

    //원데이타라고 가정함
    public List<pcurlData> ListData = new List<pcurlData>();

    public async Task OpenDetail(long transSeq)
    {
        await refPcurlManagePopUp.openPopUp(transSeq);
    }
    protected override void OnInitialized()
    {

        ListData.Add(new pcurlData(1, "승인대기", "요청사유1", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(2, "승인대기", "요청사유2", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(3, "승인대기", "요청사유3", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(4, "승인대기", "요청사유4", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(5, "승인대기", "요청사유5", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(6, "승인대기", "요청사유6", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(7, "승인대기", "반출", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(8, "승인대기", "반출", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(9, "승인대기", "반출", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(10, "승인대기", "요청사유7", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(11, "승인대기", "요청사유8", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(12, "승인대기", "요청사유9", "www.naver.com", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(13, "승인대기", "반출", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(14, "승인대기", "반출", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(15, "승인대기", "반출", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(16, "승인대기", "요청사유10", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(17, "승인대기", "반출", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(18, "승인대기", "요청사유1", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(19, "승인대기", "반출", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(20, "승인대기", "반출", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(21, "승인대기", "요청사유11", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(22, "승인대기", "반출", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(23, "승인대기", "반출", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(24, "승인대기", "반출", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));
        ListData.Add(new pcurlData(25, "승인대기", "반출", "www.daum.net", "2020/04/01 10:11:12", "2020/04/01 10:11:12"));

        SideBarUISvc = SGAppMgrSvc.SideBarUIService;
        TotalCount = ListData.Count;
        UpdateList(0);
        //페이징 계산
        dispLimit = 1;
        nTotalPages = (int)TotalCount / nPageListCount;
        if (TotalCount % nPageListCount > 0)
            nTotalPages++;
        nStartPage = nViewPageNo - (int)viewPageCount / 2;
        if (nStartPage < 1)
            nStartPage = 1;


        PCURLManageParam param = new PCURLManageParam("20190101000000", "20201212999999", 201901211700000029, "1", "", "", 20, 1);
        PCURLManageDao dao = new PCURLManageDao();
        System.Diagnostics.Debug.WriteLine(dao.TotalCount(param));   // 쿼리 데이터 카운트
        System.Diagnostics.Debug.WriteLine(dao.List(param));         // 데이터 요청 쿼리

        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            jsRuntime.InvokeAsync<object>("initApproveUI");
            jsRuntime.InvokeAsync<object>("initPageLeft");
        }
        base.OnAfterRender(firstRender);
    }
    private void HomeMove()
    {
        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;
        MyNavigationManager.NavigateTo("/Welcome");
        foreach (var MenuItem in SideBarUISvc.MenuList)
        {
            if ((MenuItem.CategoryId == LSIDEBAR.MENU_CATE_ROOT) && (MenuItem.GroupId == groupID))
            {
                SideBarUISvc.ActiveMenu = MenuItem;
                break;
            }
        }
        //return "/Welcome";
    }
    public class pcurlData
    {
        public long TransSeq { get; set; }

        public string ApvStatus { get; set; }               //승인상태
        public string ReqReason { get; set; }               //요청사유
        public string URL { get; set; }                     //URL
        public string RequestTime { get; set; }             //승인요청일
        public string ApproveTime { get; set; }             //승인일

        public pcurlData(long seq, string apvstatus, string reqreason, string url, string requesttime, string approvetime)
        {
            TransSeq = seq;
            ApvStatus = apvstatus;
            ReqReason = reqreason;
            URL = url;
            RequestTime = requesttime;
            ApproveTime = approvetime;
        }
    }
}

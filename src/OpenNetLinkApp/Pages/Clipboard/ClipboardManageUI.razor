@page "/clipBoardManage"
@page "/clipBoardManage/{groupIDbyParam:int}"

@using OpenNetLinkApp.Data.SGQuery
@using HsNetWorkSGData
@using System.Diagnostics
@using OpenNetLinkApp.Models.SGSideBar
@using OpenNetLinkApp.Services.SGAppManager
@using OpenNetLinkApp.PageEvent
@using OpenNetLinkApp.Data.SGDicData.SGUnitData
@using OpenNetLinkApp.Data.SGDomain
@inject IJSRuntime jsRuntime
@inject XmlConfService XmlConf
@inject NavigationManager MyNavigationManager
@inject ISGAppManagerService SGAppMgrSvc
@inject HSCmdCenter HSCmdCenter
<div class="content-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">클립보드 관리</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item" style="color:blue;" @onclick="(e=>HomeMove())"><i class="fas fa-home mr-1"></i>HOME</li>
                    <li class="breadcrumb-item active">클립보드 관리</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- S file content -->
<section class="content">
    <div class="container-fluid">
        <!-- Info boxes -->

        <div class="row">
            <div class="col-12 col-sm-6 col-md-12">

                <div class="card card-primary card-outline mb-2 ">
                    <div class="card-body">


                        <table>

                            <tr>
                                <th class="p-2">기간</th>
                                <td>
                                    <input type="text" style="color:black" class="form-control col-md-5 float-left" id="datepicker13" readonly="readonly" value="@strFromDay">
                                    <span class="float-left col-md-1">-</span>
                                    <input type="text" style="color:black" class="form-control col-md-5 float-left" id="datepicker14" readonly="readonly" value="@strToDay">
                                </td>
                                <th class="p-2"> 전송구분 </th>
                                <td>
                                    <select class="form-control" style="width:80px;">
                                        <option> 전체</option>
                                        <option> 반입</option>
                                        <option> 반출</option>
                                    </select>
                                </td>
                                <th class="p-2"> 전송상태 </th>
                                <td>
                                    <select class="form-control" style="width:80px;">
                                        <option> 전체</option>
                                        <option> 전송완료</option>
                                        <option> 전송대기</option>
                                        <option> 전송취소</option>
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <th class="p-2"> 승인상태 </th>
                                <td>
                                    <select class="form-control" style="width:80px;">
                                        <option> 전체</option>
                                        <option> 승인</option>
                                        <option> 승인대기</option>
                                        <option> 반려</option>
                                        <option> 요청취소</option>
                                    </select>
                                </td>
                                <th class="p-2"> 데이타타입 </th>
                                <td>
                                    <select class="form-control" style="width:80px;">
                                        <option> 전체</option>
                                        <option> 평문</option>
                                        <option> 미미지</option>
                                        <option> 객체</option>
                                    </select>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-12">
                <div class="col-sm-12 text-right">
                    <button type="button" class="btn btn-md btn-black"><i class="fas fa-search"></i>@XmlConf.GetTitle("T_COMMON_SEARCH")</button>
                </div>
            </div>
        </div>

        <!-- list -->

        <div class="row">
            <div class="col-md-12">
                <div class="card card-secondary card-outline" style="height:100%;">


                    <form class="form-horizontal">

                        <div class="card-body p-0">
                            <table class="table table-head-fixed table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <!--<th>
                                            <input class="input" type="checkbox">
                                        </th>-->
                                        <th style="text-align:center">결재 종류</th>
                                        <th style="text-align:center">전송 구분</th>
                                        <th style="text-align:center">전송 상태</th>
                                        <th style="text-align:center">승인 상태</th>
                                        <th style="text-align:center">데이타 타입</th>
                                        <th style="text-align:center">전송 요청일</th>
                                        <th style="text-align:center">상세보기</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (clipBoardData item in mData)
                                    {
                                        <tr>
                                            <!--<td>
                                                <input class="input" type="checkbox">
                                            </td>-->
                                            <td style="text-align:center">@item.ApvType</td>
                                            <td style="text-align:center">@item.TransType</td>
                                            <td style="text-align:center">@item.TransStatus</td>
                                            <td style="text-align:center">@item.ApvStatus</td>
                                            <td style="text-align:center">@item.DataType</td>
                                            <td style="text-align:center">@item.RequestTime</td>
                                            <td style="text-align:center"><button type="button" class="btn btn-default btn-xs pl-2 pr-2 pt-0 pb-0" @onclick="@(e=>OpenDetail(item.TransSeq))"><i class="fas fa-search"></i></button></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="card-body pt-0">
                            <!--S page -->
                            <div style="padding-top:1.25rem;">
                                <div style="float:left;">
                                    <div class="dataTables_info" id="example2_info" role="status" aria-live="polite">총페이지 : @nViewPageNo/@nTotalPages</div>
                                </div>
                                <Pagenator ViewPageCount="@viewPageCount" DispLimit=@dispLimit NViewPageNo="@nViewPageNo"
                                           NTotalPages="@nTotalPages" NStartPage="@nStartPage"
                                           UpdateListPagingInvoke="UpdateList"></Pagenator>
                            </div>
                        </div>
                        <Footer></Footer>
                    </form>
                </div>
            </div>

        </div>

        <!--/.list -->
        <!-- /.row -->
    </div><!--/. container-fluid -->
</section>
<!-- /S. file content -->

<ClipboardManagePopUp @ref="refClipboardManagePopUp"></ClipboardManagePopUp>

@code {

    [Parameter]
    public int groupIDbyParam { get; set; }

    ClipboardManagePopUp refClipboardManagePopUp;
    public int TotalCount { get; set; }
    public List<clipBoardData> mData = new List<clipBoardData>();
    private int nPageListCount = 10;    //리스트에 뿌려질 단위갯수
    private int nViewPageNo = 0;
    private int nTotalPages = 1;
    private int viewPageCount = 10;  //pageing 에 뿌려질 앵커갯수
    private int nStartPage = 1;
    private int dispLimit = 1;
    ISGSideBarUIService SideBarUISvc;
    ISGSiteConfigService siteConfig;
    TransferParam param = new TransferParam();
    public string strFromDay = "";
    public string strToDay = "";

    public void GetInitDateTime()
    {
        strToDay = DateTime.Now.ToString("yyyy-MM-dd");
        string year = DateTime.Now.ToString("yyyy");
        string month = DateTime.Now.ToString("MM");
        string day = DateTime.Now.ToString("dd");
        int nYear = Convert.ToInt32(year);
        int nMonth = Convert.ToInt32(month);
        int nDay = Convert.ToInt32(day);
        System.DateTime Time_toDay = new System.DateTime(nYear, nMonth, nDay);
        strFromDay = Time_toDay.AddDays(-7).ToString("yyyy-MM-dd");
    }

    private void UpdateList(int pageNumber)
    {
        nViewPageNo = pageNumber + 1;
        mData = ListData.Skip(pageNumber * nPageListCount).Take(nPageListCount).ToList();
    }

    //원데이타라고 가정함
    public List<clipBoardData> ListData = new List<clipBoardData>();

    public async Task OpenDetail(long transSeq)
    {
        await refClipboardManagePopUp.openPopUp(transSeq);
    }

protected override void OnInitialized()
{
    SideBarUISvc = SGAppMgrSvc.SideBarUIService;
    siteConfig = SGAppMgrSvc.SiteConfigInfoService;
    //파라미터 핸들링 클래스 초기화
    param.XmlConf = XmlConf;
    param.jsRuntime = jsRuntime;
    
    @*TransferParam param = new TransferParam("", "", "", "", "20190101", "20201231", "uglyice", 20, 1);
        param.DataType = 2;
        ClipboardTransferDao dao = new ClipboardTransferDao();
        System.Diagnostics.Debug.WriteLine(dao.TotalCount(param));   // 쿼리 데이터 카운트
        System.Diagnostics.Debug.WriteLine(dao.List(param));         // 데이터 요청 쿼리*@

    GetInitDateTime();
    base.OnInitialized();
}

protected override void OnAfterRender(bool firstRender)
{
    if (firstRender)
    {
        jsRuntime.InvokeAsync<object>("initApproveUI");
        jsRuntime.InvokeAsync<object>("initPageLeft");
        doSearch();
    }
    base.OnAfterRender(firstRender);
}

public async void doSearch()
{
    ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
    int groupID = 0;
    if (sgSideBar != null)
        groupID = sgSideBar.GroupId;

    //LIST 요청응답
    HSCmdCenter.sgPageEvent.SetQueryListEvent(groupID, SearchListResult);
    //COUNT 요청응답
    HSCmdCenter.sgPageEvent.SetQueryCountEvent(groupID, SearchCountResult);

    SGLoginData sgLoginData = (SGLoginData)HSCmdCenter.GetLoginData(groupID);
    string curUserID = "";
    if (sgLoginData != null)
        curUserID = sgLoginData.GetUserID();

    string systemid = (sgLoginData.GetSystemPosition() == true ? "I" : "E");

    param.UserID = curUserID;
    param.Src_system_id = systemid;
    await param.SetSearchStartDate("datepicker13");
    await param.SetSearchEndDate("datepicker14");
    
    ClipboardTransferDao dao = new ClipboardTransferDao();
    string strQueryCount = dao.TotalCount(param);
    HSCmdCenter.SendCountQuery(groupID, curUserID, strQueryCount);
}
public void SearchCountResult(int groupId, SGData e)
{
        @*string result = e.GetSvrRecordTagData("RESULT");
            int count = Int32.Parse(e.GetSvrRecordTagData("COUNT"));  //결과레코드수
            string reason = e.GetSvrRecordTagData("REASON");
            List<Dictionary<int, string>> listCnt = null;
            listCnt = e.GetSvrRecordData("RECORD");
            string cnt = "";                        //총 레코드 카운트
            listCnt[0].TryGetValue(0, out cnt);
            int totalCnt = Int32.Parse(cnt);

            if (result != "0")
            {
                ShowMessage("error", reason);
                return;
            }
            if (count <= 0)
            {
                ShowMessage("warn", reason);            // 검색결과가 존재하지 않습니다.
                if (listData != null) listData.Clear();
                SetPageinfo(totalCnt);
                StateHasChanged();
                return;
            }
            SetPageinfo(totalCnt);
            //리스트 쿼리 호출
            doSearchList();*@
    }

    public void SearchListResult(int groupId, SGData e)
    {
        @*string result = e.GetTagData("RESULT");
            string reason = e.GetTagData("REASON");
            int count = Int32.Parse(e.GetTagData("COUNT"));  //결과레코드수
            listData = e.GetSvrRecordData2("RECORD");*@

        StateHasChanged();
    }
    private void HomeMove()
    {
        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        string strNavigateWithGroupID = "";

        if (siteConfig.GetUseDashBoard())
            strNavigateWithGroupID = "/Welcome/";
        else
            strNavigateWithGroupID = "/Transfer/";

        strNavigateWithGroupID += groupID.ToString();

        MyNavigationManager.NavigateTo(strNavigateWithGroupID);
        foreach (var MenuItem in SideBarUISvc.MenuList)
        {
            if ((MenuItem.CategoryId == LSIDEBAR.MENU_CATE_ROOT) && (MenuItem.GroupId == groupID))
            {
                SideBarUISvc.ActiveMenu = MenuItem;
                break;
            }
        }
    }


    public class clipBoardData
    {
        public long TransSeq { get; set; }
        public string ApvType { get; set; }
        public string TransType { get; set; }
        public string TransStatus { get; set; }
        public string ApvStatus { get; set; }
        public string DataType { get; set; }
        public string RequestTime { get; set; }

        public clipBoardData(long seq, string apvtype, string transtype, string transstatus, string apvstatus, string datatype, string requesttime)
        {
            TransSeq = seq;
            ApvType = apvtype;
            TransType = transtype;
            TransStatus = transstatus;
            ApvStatus = apvstatus;
            DataType = datatype;
            RequestTime = requesttime;
        }
    }
}

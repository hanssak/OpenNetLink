@page "/UserInfo"
@using System.Diagnostics
@inject IJSRuntime JSRuntime
@inject ISGAppManagerService SGAppMgrSvc
@inject IFileReaderService fileReaderService

    <!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">사용자 정보</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#"><i class="fas fa-home mr-1"></i>Home</a></li>
                    <li class="breadcrumb-item active">사용자 정보</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- S file content -->
<section class="content">
    <div class="container-fluid">
        <!-- Info boxes -->
        <div class="row">
            <div class="col-md-12">
                <div class="card card-primary card-outline mb-3">
                    <div class="card-body">

                        <div class="col-md-10">
                            <div class="table">
                                <div class="title_set1"><i class="fas fa-caret-right mr-2"></i>기본정보 </div>
                                <table class="table_set1">
                                    <colgroup>
                                        <col width="15%">
                                        <col width="">
                                        <col width="35%">
                                    </colgroup>
                                    <tr>
                                        <th>사용자명</th><!--style="display:none"-->
                                        <td>@(GetUserInfo()?.UserName)</td>
                                        <td rowspan="4" class="p-0 text-center align-middle">
                                            <img src="@stProfilePhotoPath" alt="User Avatar" class="img-size-90 img-circle"><br>
                                            <div class="row">
                                                <div class="col-md-12 mt-2" style="font-size:.7px !important;">
                                                    <button type="button" class="btn bg-gradient-secondary btn-xs col-md-3 " @onclick="OpenFileSelect">사진등록</button>
                                                    <input type="file" id="profileInput" accept=".gif,.jpg,.jpeg,.png" style="display:none" @onchange="doRegist"/>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>부서명</th>
                                        <td>@(GetUserInfo()?.DeptName)</td>
                                    </tr>
                                    <tr>
                                        <th>직책</th>
                                        <td>@(GetUserInfo()?.Position)</td>
                                    </tr>
                                    <tr>
                                        <th>직위</th>
                                        <td>@(GetUserInfo()?.Rank)</td>
                                    </tr>
                                </table>



                                <div class="table-responsive">
                                    <div class="title_set1"><i class="fas fa-caret-right mr-2"></i>결재권한 </div>
                                    <table class="table_set1">
                                        <colgroup>
                                            <col width="15%">
                                            <col width="35%">
                                            <col width="15%">
                                            <col width="35%">
                                        </colgroup>
                                        <tr>
                                            <th>결재권한</th>
                                            <td>일반사용자/결재자/전결자</td>
                                            <th>보안결재권한</th>
                                            <td>일반사용자/정보보안결재자</td>
                                        </tr>
                                    </table>


                                    <div class="table-responsive">
                                        <div class="title_set1"><i class="fas fa-caret-right mr-2"></i>일일 파일 전송 제한</div>
                                        <table class="table_set1">
                                            <colgroup>
                                                <col width="15%">
                                                <col width="35%">
                                                <col width="15%">
                                                <col width="35%">
                                            </colgroup>
                                            <tr>
                                                <th>전송횟수제한</th>
                                                <td>@(GetUserInfo()?.UserInfoAdded.DayFileCountLimit)회까지 전송</td>
                                                <th>전송용량제한</th>
                                                <td>150000MB까지 전송</td>
                                            </tr>
                                        </table>

                                        <div class="table-responsive">
                                            <div class="title_set1"><i class="fas fa-caret-right mr-2"></i>일일 클립보드 전송 제한</div>
                                            <table class="table_set1">
                                                <colgroup>
                                                    <col width="15%">
                                                    <col width="35%">
                                                    <col width="15%">
                                                    <col width="35%">
                                                </colgroup>
                                                <tr>
                                                    <th>전송횟수제한</th>
                                                    <td>3600회까지 전송</td>
                                                    <th>전송용량제한</th>
                                                    <td>1024MB까지 전송</td>
                                                </tr>
                                            </table>

                                            <div class="table-responsive">
                                                <div class="title_set1"><i class="fas fa-caret-right mr-2"></i>확장자 제한</div>
                                                <table class="table_set1">
                                                    <colgroup>
                                                        <col width="100%">
                                                    </colgroup>
                                                    <tr>
                                                        <th>

                                                            <div class="row">
                                                                <div class="custom-control custom-radio mr-3 ml-1">
                                                                    <input class="custom-control-input" type="radio" id="customRadio1" name="customRadio">
                                                                    <label for="customRadio1" class="custom-control-label pt-1">허용 (White)</label>
                                                                </div>
                                                                <div class="custom-control custom-radio">
                                                                    <input class="custom-control-input" type="radio" id="customRadio2" name="customRadio" checked="">
                                                                    <label for="customRadio2" class="custom-control-label pt-1">차단 (Black)</label>
                                                                </div>
                                                            </div>

                                                        </th>
                                                    </tr>
                                                    <tr>
                                                        <td colspan="2">exe;com;dll </td>
                                                    </tr>
                                                </table>

                                                <div class="table-responsive">
                                                    <div class="title_set1"><i class="fas fa-caret-right mr-2"></i>URL자동전환</div>
                                                    <table class="table_set1">
                                                        <colgroup>
                                                            <col width="100%">
                                                        </colgroup>
                                                        <tr>
                                                            <td>

                                                                <div class="row">
                                                                    <div class="custom-control custom-radio mr-3 ml-1">
                                                                        <input class="custom-control-input" type="radio" id="customRadio3" name="customRadio1">
                                                                        <label for="customRadio3" class="custom-control-label pt-1 mr-2">사용</label>
                                                                    </div>
                                                                    <div class="custom-control custom-radio">
                                                                        <input class="custom-control-input" type="radio" id="customRadio4" name="customRadio1" checked="">
                                                                        <label for="customRadio4" class="custom-control-label pt-1">미사용</label>
                                                                    </div>
                                                                </div>

                                                            </td>
                                                        </tr>

                                                    </table>


                                                </div>
                                            </div>


                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@code {
    ISGSideBarUIService SideBarUISvc;
    ISGUserInfoService UserInfoSvc;
    public ElementReference inputTypeFileElement;
    IFileReaderRef dropReference;
    private string stProfilePhotoPath;

    protected override void OnInitialized()
    {
        SideBarUISvc = SGAppMgrSvc.SideBarUIService;
        UserInfoSvc = SGAppMgrSvc.UserInfoService;
        RefreshProfilePhoto();
    }

    private void DeleteProfilePhoto()
    {
        string pathToContentRoot = string.Empty;
        var pathToExe = Process.GetCurrentProcess().MainModule.FileName;
        pathToContentRoot = Path.GetDirectoryName(pathToExe);

        string filepath = String.Empty;
        filepath = pathToContentRoot + "/wwwroot/images/user/" + GetUserInfo().UserId + ".png";
        System.IO.FileInfo f1 = new System.IO.FileInfo(filepath);
        if (f1.Exists)
        {
            f1.Delete();
        }
        filepath = pathToContentRoot + "/wwwroot/images/user/" + GetUserInfo().UserId + ".jpg";
        System.IO.FileInfo f2 = new System.IO.FileInfo(filepath);
        if (f2.Exists)
        {
            f2.Delete();
        }
        filepath = pathToContentRoot + "/wwwroot/images/user/" + GetUserInfo().UserId + ".jpeg";
        System.IO.FileInfo f3 = new System.IO.FileInfo(filepath);
        if (f3.Exists)
        {
            f3.Delete();
        }
        filepath = pathToContentRoot + "/wwwroot/images/user/" + GetUserInfo().UserId + ".gif";
        System.IO.FileInfo f4 = new System.IO.FileInfo(filepath);
        if (f4.Exists)
        {
            f4.Delete();
        }
    }

    private void RefreshProfilePhoto()
    {
        string pathToContentRoot = string.Empty;
        var pathToExe = Process.GetCurrentProcess().MainModule.FileName;
        pathToContentRoot = Path.GetDirectoryName(pathToExe);

        string filepath = String.Empty;
        filepath = pathToContentRoot + "/wwwroot/images/user/" + GetUserInfo().UserId + ".png";
        System.IO.FileInfo f1 = new System.IO.FileInfo(filepath);
        if (f1.Exists)
        {
            stProfilePhotoPath = "/images/user/" + GetUserInfo().UserId + ".png";
            return;
        }
        filepath = pathToContentRoot + "/wwwroot/images/user/" + GetUserInfo().UserId + ".jpg";
        System.IO.FileInfo f2 = new System.IO.FileInfo(filepath);
        if (f2.Exists)
        {
            stProfilePhotoPath = "/images/user/" + GetUserInfo().UserId + ".jpg";
            return;
        }
        filepath = pathToContentRoot + "/wwwroot/images/user/" + GetUserInfo().UserId + ".jpeg";
        System.IO.FileInfo f3 = new System.IO.FileInfo(filepath);
        if (f3.Exists)
        {
            stProfilePhotoPath = "/images/user/" + GetUserInfo().UserId + ".jpeg";
            return;
        }
        filepath = pathToContentRoot + "/wwwroot/images/user/" + GetUserInfo().UserId + ".gif";
        System.IO.FileInfo f4 = new System.IO.FileInfo(filepath);
        if (f4.Exists)
        {
            stProfilePhotoPath = "/images/user/" + GetUserInfo().UserId + ".gif";
            return;
        }
        stProfilePhotoPath = "/images/avatar.png";
    }

    private ISGUserInfo GetUserInfo()
    {
        return UserInfoSvc.GetUserInfo(SideBarUISvc.ActiveMenu?.GroupId ?? 0);
    }

    private async Task OpenFileSelect()
    {
        //object[] param = { };
        await JSRuntime.InvokeAsync<object>("startClick");
    }

    private async Task doRegist()
    {
        DeleteProfilePhoto();
        string pathToContentRoot = string.Empty;
        var pathToExe = Process.GetCurrentProcess().MainModule.FileName;
        pathToContentRoot = Path.GetDirectoryName(pathToExe);
        Console.WriteLine("Call Do Regist...:" + pathToContentRoot);

        dropReference = fileReaderService.CreateReference(inputTypeFileElement);
        string targets = new string("profileInput");
        await dropReference.SetDragTargetElementAsync(targets);
        await dropReference.IsDragTargetElement(targets);
        System.Threading.Thread.Sleep(500);
        await dropReference.AppendDragTargetElement(targets);

        foreach (var file in await dropReference.EnumerateFilesAsync())
        {
            var fileInfo = await file.ReadFileInfoAsync();
            Debug.WriteLine("FileName:" + fileInfo.Path + fileInfo.Name);
            string stExt = Path.GetExtension(fileInfo.Name);

            if (stExt != ".jpg" && stExt != ".jpeg" && stExt != ".gif" && stExt != ".png")
            {
                object[] param = { "success", "시스템", "확장자는 jpg,jpeg,gif,png로 제한됩니다." };
                await JSRuntime.InvokeAsync<object>("fireToastMessage", param);
                return;
            }

            // Read into memory and act
            byte[] buffer = new byte[16 * 1024];
            using (MemoryStream memoryStream = await file.CreateMemoryStreamAsync(16 * 1024))
            {
                string filepath = pathToContentRoot + "/wwwroot/images/user/" + GetUserInfo().UserId + Path.GetExtension(fileInfo.Name);
                try
                {
                    int read = 0;
                    FileStream fs;
                    fs = new FileStream(filepath, FileMode.Create, FileAccess.Write);

                    while ((read = memoryStream.Read(buffer, 0, buffer.Length)) > 0)
                    {
                        fs.Write(buffer, 0, read);
                    }
                    fs.Close();

                }
                catch (Exception ex)
                {
                    Debug.WriteLine(ex.StackTrace);
                }
            }
        }

        await dropReference.ClearValue();
        await dropReference.initFileReaderService(targets);
        await dropReference.DelDragTargetElementAsync(targets);
        RefreshProfilePhoto();
        StateHasChanged();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await base.OnAfterRenderAsync(firstRender);
        }
    }

}

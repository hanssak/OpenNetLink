@using System.Collections.Generic
@using Microsoft.JSInterop
@using OpenNetLinkApp.Models.SGSideBar

@inject IJSRuntime JSRuntime
@inject WebWindow Window
@inject ISGAppManagerService SGAppMgrSvc

@implements IDisposable

<!-- Sidebar -->
<div class="sidebar">

  <!-- Sidebar Menu -->
  <SGSideBarUI SideBarUISvc="@SideBarUISvc" />
  <!-- /.Sidebar-Menu -->

</div>
<!-- /.Sidebar -->

@code
{
    ISGSideBarUIService SideBarUISvc;

    public void SGSideBarUIMenuDefinition()
    {
        
    }

    protected override void OnInitialized()
    {
        SideBarUISvc = SGAppMgrSvc.SideBarUIService;
        SGSideBarUIMenuDefinition();
        SideBarUISvc.OnChangeActMenu += StateHasChanged;
    }

    public void Dispose()
    {
        SideBarUISvc.OnChangeActMenu -= StateHasChanged;
    }

    public async Task LoadTreeView()
    {
        await JSRuntime.InvokeVoidAsync("loadTreeView");
    }
    public async Task LoadFileReaderService()
    {
        await JSRuntime.InvokeVoidAsync("loadFileReaderService");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            string iconFilename = "wwwroot/SecureGate.ico";
            Window.SetIconFile(iconFilename);

            //await LoadTreeView();
            await LoadFileReaderService();
            await base.OnAfterRenderAsync(firstRender);
            //StateHasChanged();
        }
    }
}

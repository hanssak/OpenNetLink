@inherits LayoutComponentBase
@using OpenNetLinkApp.Data.SGDicData.SGUnitData
@using OpenNetLinkApp.PageEvent
@using HsNetWorkSG
@inject HSCmdCenter HsCmdCenter
@inject XmlConfService XmlConf
<!-- Navbar -->
<nav id="main-nav" class="main-header navbar navbar-expand navbar-white navbar-light text-md navbar-default border-0">
    <HeaderUI />
</nav>
<!-- /.Navbar -->
<!-- Main Sidebar Container -->
<aside id="left-sidebar" class="main-sidebar sidebar-dark-primary elevation-4" style="background-image: url('/images/adminlte/slide_bg_1.png');background-position:right bottom; background-size: cover;">
    <!-- Brand Logo -->
    <a href="/Welcome" class="brand-link border-0 m-0 p-0 text-center">
        <img src="/images/adminlte/logo_l.png" alt=" Logo" class="brand-text float-left">
    </a>
    <a href="/Welcome" class="brand-link border-0">
        <img src="/images/adminlte/logo_s.png" alt="Logo" class="logo-xs">
    </a>
    <!-- /.Brand Logo -->

    <SideBarUI />
</aside>
<!-- /.Main Sidebar Container -->
<!-- Content Wrapper. Contains page content -->
<div id="main-body" class="content-wrapper">
    @Body
    <LogIn_DisplayLock></LogIn_DisplayLock>
</div>
<!-- /.Content-Wrapper -->
<!-- Control Sidebar -->
<aside class="control-sidebar control-sidebar-dark">
    <!-- Control sidebar content goes here -->
    <CtrlSideUI />
</aside>
<!-- /.Control Sidebar -->
<!-- Main Footer -->
<footer id="main-footer" class="main-footer">
    <FooterUI />
</footer>
<!-- /.Main Footer -->
<VirusReport @ref="refVirusReport"></VirusReport>
<Update_PopUp @ref="refUpdate_PopUp"></Update_PopUp>
@code
{
    VirusReport refVirusReport;
    Update_PopUp refUpdate_PopUp;
    protected override void OnInitialized()
    {
        HsCmdCenter.sgPageEvent.SetAPTAndVirusNotiEventAdd(AptAndVirusNoti);
        HsCmdCenter.sgPageEvent.SetClientUpgradeNotiEvent(UpdateNoti);
    }

    public async void AptAndVirusNoti(int groupID, eCmdList cmd, AptAndVirusEventArgs e)
    {
        string strTitle = XmlConf.GetNetworkTitle(groupID);
        //string strMsg = NotiMsgMake(cmd, e);
        string strFileTransTitle = e.strTitle;
        string strVirusContent = e.strMsg;
        string strTransSeq = e.strTransSeq;
        bool bVirus = false;
        if (cmd == eCmdList.eVIRUSSCAN)
            bVirus = true;
        refVirusReport.SetInit(groupID, strTransSeq, strFileTransTitle, strVirusContent, bVirus);
        await refVirusReport.openPopUp();

    }

    public async void UpdateNoti(PageEventArgs e)
    {
        string strSvrCliVersion = e.strMsg;
        if(strSvrCliVersion.Equals(""))
        {
            return;
        }
        string strCliVersion = HsCmdCenter.GetCliVersion();
        if(strCliVersion.Equals(""))
        {
            return;
        }

        strSvrCliVersion = strSvrCliVersion.ToUpper();
        strCliVersion = strCliVersion.ToUpper();
        if (String.Compare(strSvrCliVersion, strCliVersion, comparisonType: StringComparison.OrdinalIgnoreCase) > 0)
        {
            await refUpdate_PopUp.openPopUp();
        }
        else
            return;
    }
}
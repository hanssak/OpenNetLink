@using OpenNetLinkApp.Data.SGDicData.SGUnitData
@inject XmlConfService XmlConf

<table class="table table-head-fixed">
    <thead>
        @if (TableType == "PROXYAPPROVE")
        {
            <tr>
                <th style="text-align:center;">@XmlConf.GetTitle("T_COMMON_DEPT") </th>
                <th style="text-align:center;">@XmlConf.GetTitle("T_COMMON_RANK") </th>
                <th style="text-align:center;">@XmlConf.GetTitle("T_COMMON_NAME") </th>
                @*    @TableHeaders*@
            </tr>
        }
    </thead>
    <tbody>
        @if (TableType == "PROXYAPPROVE")
        {
            @foreach (ApproverInfo item in ProxyDataSource)
            {
                <tr id="A" draggable="false" data-draggable="tritem" aria-grabbed="false" value="@item.UserSeq" @onclick="()=>ClickSearchList(item)" style="background-color :@((selectKey ==item.UserSeq) ? Seleted_BackColor: Default_BackColor); color : @((selectKey ==item.UserSeq) ? Seleted_ForeColor: Default_ForeColor)">
                    @*<tr draggable="false" data-draggable="tritem" aria-grabbed="false" value="@item.UserSeq" @onmousedown="()=>rowMouseDown(item)" style="background-color :@((selectKey ==item.UserSeq) ? Seleted_BackColor: Default_BackColor); color : @((selectKey ==item.UserSeq) ? Seleted_ForeColor: Default_ForeColor)">*@

                    <td style="text-align:left;">@item.DeptName</td>
                    <td style="text-align:center;">@item.Grade</td>
                    <td style="text-align:center;">@item.Name</td>
                    @*@TableRows*@
                </tr>
            }
        }
    </tbody>
</table>

@code
{
    [Parameter] public List<ApproverInfo> ProxyDataSource { get; set; } = new List<ApproverInfo>();
    [Parameter] public string Seleted_BackColor { get; set; } = "#8FA9D9";
    [Parameter] public string Seleted_ForeColor { get; set; } = "#FFFFFF";
    [Parameter] public string Default_BackColor { get; set; } = "#FFFFFF";
    [Parameter] public string Default_ForeColor { get; set; } = "#000000";
    [Parameter] public string TableType { get; set; } = "PROXYAPPROVE";
    [Parameter] public EventCallback<string> SelectedKey { get; set; }
    [Parameter] public EventCallback<object> OnClick { get; set; }
    [Parameter] public EventCallback<object> OnDoubleClick { get; set; }

    @*[Parameter] public RenderFragment TableHeaders { get; set; }
        [Parameter] public RenderFragment TableRows { get; set; }*@

    private int doubleClickMaxTime = 500; //밀리세컨
    


    private string selectKey = "";


    DateTime timeInterval = DateTime.Now;

    string lastIndex = "";
    void ClickSearchList(object clickValue)
    {

        DateTime now = DateTime.Now;
        Console.WriteLine($"ClickSearchList Name : {clickValue.ToString()}");
        switch (TableType)
        {
            case "PROXYAPPROVE":
                {
                    ApproverInfo dbclickInfo = clickValue as ApproverInfo;

                    if (timeInterval.AddMilliseconds(doubleClickMaxTime) <= now || lastIndex != dbclickInfo.Index)
                    {
                        Console.WriteLine($"일반클릭!! Name : {dbclickInfo.Name}");
                        //일반클릭
                        @*stSelectProxy = dbclickInfo.UserSeq;*@
                        timeInterval = now;

                        OnClick.InvokeAsync(clickValue);
                    }
                    else
                    {
                        Console.WriteLine($"더블클릭!! Name : {dbclickInfo.Name}");
                        //더블클릭
                        timeInterval = now.AddSeconds(-10);     //이후 3번클릭은 더블클릭 되지 않도록
                        @*DoubleClickSearchList(dbclickInfo);*@
                        OnDoubleClick.InvokeAsync(clickValue);

                    }
                    selectKey = dbclickInfo.UserSeq;
                    lastIndex = dbclickInfo.Index;
                }
                break;
        }


    }

}
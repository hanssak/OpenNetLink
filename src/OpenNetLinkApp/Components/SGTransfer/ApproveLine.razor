@using System.Diagnostics
@using AgLogManager
@using OpenNetLinkApp.Data.SGDicData.SGUnitData
@using OpenNetLinkApp.Data.SGSettings
@using OpenNetLinkApp.Models.SGSettings
@using HsNetWorkSG
@using HsNetWorkSGData
@using OpenNetLinkApp.Data.SGQuery

@inject ISGAppManagerService SGAppMgrSvc
@inject HSCmdCenter HSCmdCenter
@inject PageStatusService pageService

@if (m_step == 0)
{
    @foreach (SGApprover app in approverList)
    {
        <button type="button" class="btn btn-line btn-sm col-xs-1 @app.attrClass">
            <i class="fas fa-user "></i> @app.Name @app.Grade
        </button>
        @if (!last.Equals(app))
        {
            <label class="linelabel"><i class="fas fa-angle-right"></i></label>
        }
    }
}
else
{
    @for (int i = 0; i < approverList.Count; i++)
    {
        SGApprover cApv = approverList[i];
        SGApprover nApv = null;
        @if (approverList.Count - 1 != i)
        {
            nApv = approverList[i + 1];
        }
        <button type="button" class="btn btn-line btn-sm col-xs-1 @cApv.attrClass">
            <i class="fas fa-user "></i> @cApv.Name @cApv.Grade
        </button>
        @if (nApv != null)
        {
            @if (!cApv.Order.Equals(nApv.Order))
            {
                <label class="linelabel"><i class="fas fa-angle-right"></i></label>
            }
            else
            {
                <label class="linelabel">or</label>
            }
        }
    }
}

@code {
    private static Serilog.ILogger CLog => Serilog.Log.ForContext<ApproveLine>();
    private LinkedList<ApproverInfo> apprLinkedList = null;
    private List<SGApprover> approverList = new List<SGApprover>();
    private SGApprover last = null;
    ISGSideBarUIService SideBarUISvc;
    SGSettingsDBProc sgSettingProc;
    ISGUserInfoService sgUserSvr;

    //결재단계 멤버변수 추가 0:AND 1:OR 2:AND+OR
    int m_step = 0;

    protected override void OnInitialized()
    {
        sgUserSvr = SGAppMgrSvc.UserInfoService;
        sgSettingProc = SGSettingsDBProc.Instance;
        SideBarUISvc = SGAppMgrSvc.SideBarUIService;
        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;
        if (pageService.GetInitApprLine(groupID) == false)
        {
            bool bLocalSave = SGAppMgrSvc.OpConfigInfoService.GetUseApprLineLocalSave(groupID);  // siteConfig   json으로 설정이동
            if (bLocalSave)
            {
                bool bApprLineExist = false;
                SGSettingData sgSettingData = null;
                sgSettingData = sgSettingProc.SelectSettingData(groupID);
                if (sgSettingData != null)
                {
                    SGRSACrypto sgRSACrypto = new SGRSACrypto();
                    string strEncApprLine = sgSettingProc.GetSettingApprLine(groupID);
                    string strApprLine = "";
                    sgRSACrypto.ValueDecrypt(strEncApprLine, out strApprLine);

                    SGUserData sgUserData = null;
                    sgUserData = (SGUserData)HSCmdCenter.GetUserData(groupID);
                    if (sgUserData == null)
                    {
                        ApproveLineChange();
                        base.OnInitialized();
                        return;
                    }

                    string strUserSeq = sgUserData.GetUserSequence();

                    SGLoginData sgLoginData= (SGLoginData)HSCmdCenter.GetLoginData(groupID);
                    int approveStep = (sgLoginData != null) ? sgLoginData.GetApproveStep() : 0;

                    SGApprLineData sgApprLineData = null;
                    sgApprLineData = (SGApprLineData)HSCmdCenter.GetApprLineData(groupID);

                    if (sgApprLineData != null)
                    {
                        bApprLineExist = sgApprLineData.LocalLoadANDApprLineData(strApprLine, strUserSeq, approveStep);
                        if (!bApprLineExist)
                            InitApproveLine();
                    }
                }
                if (bApprLineExist)
                    ApproveLineChange();
            }
            else
                InitApproveLine();
            pageService.SetInitApprLine(groupID, true);
            //bInitApprLine = true;
        }
        else
            ApproveLineChange();
        base.OnInitialized();
    }

    public void InitApproveLine()
    {
        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        SGLoginData sgLoginData = null;
        sgLoginData = (SGLoginData)HSCmdCenter.GetLoginData(groupID);
        if (sgLoginData == null)
            return;

        int step = sgLoginData.GetApproveStep();
        m_step = step;

        SGUserData sgUserData = null;
        sgUserData = (SGUserData)HSCmdCenter.GetUserData(groupID);
        if (sgUserData == null)
            return;

        ISGUserInfo sgUserInfo = SGAppMgrSvc.UserInfoService.GetUserInfo(groupID);

        SGApprLineData sgApprLineData = null;
        sgApprLineData = (SGApprLineData)HSCmdCenter.GetApprLineData(groupID);
        if (sgApprLineData == null)
        {

            string strApprLineName = sgUserData.GetUserName();
            string strApprLineRank = sgUserData.GetRank();
            string strApprLineDeptName = sgUserData.GetTeamName();
            string strApprLineDeptSeq = sgUserData.GetTeamCode();
            string strApprLineSeq = sgUserData.GetUserSequence();
            string strApprLineOrder = "0";
            approverList.Add(new SGApprover(strApprLineName, strApprLineRank, strApprLineDeptName, strApprLineDeptSeq, strApprLineSeq, strApprLineOrder));
            return;
        }

        List<string> listApprLineName = null;                      // 결재자 이름
        List<string> listApprLineRank = null;                      // 결재자 직위
        List<string> listApprLineDeptName = null;                  // 결재자 부서명
        List<string> listApprLineDeptSeq = null;                   // 결재자 부서Seq
        List<string> listApprLineSeq = null;                       // 결재자 Seq
        List<string> listApprLineOrder = null;                     // 결재자 Order


        listApprLineName = sgApprLineData.GetBaseApprAndLineName();            // 결재자 이름
        listApprLineRank = sgApprLineData.GetBaseApprAndLineRank();            // 결재자 직위
        listApprLineDeptName = sgApprLineData.GetBaseApprAndLineDeptName();    // 결재자 부서명
        listApprLineDeptSeq = sgApprLineData.GetBaseApprAndLineDeptSeq();      // 결재자 부서Seq
        listApprLineSeq = sgApprLineData.GetBaseApprAndLineSeq();              // 결재자 Seq
        listApprLineOrder = sgApprLineData.GetBaseApprAndLineOrder();          // 결재자 Order

        if (listApprLineName == null)
        {
            return;
        }

        //서버에서 부서Seq를 보내지 않아 일단 이렇게 처리
        if (listApprLineDeptName.Count != listApprLineDeptSeq.Count)
        {
            listApprLineDeptSeq = new List<string>();
            for (int i = 0; i < listApprLineDeptName.Count; i++)
            {
                listApprLineDeptSeq.Add("-");
            }
        }

        int nApprLineCount = listApprLineName.Count;
        bool bApprUseType = sgLoginData.GetApprove();
        if ((bApprUseType == false || sgLoginData.IsVipUser() || sgUserInfo.GetUserApprPos(false, SGAppMgrSvc.OpConfigInfoService.GetUseAllProxyAuthority(groupID)) > 1) && (nApprLineCount > 0))
            nApprLineCount = 1;



        if ((listApprLineName != null) && (listApprLineRank != null) && (listApprLineDeptName != null) && (listApprLineSeq != null) && (listApprLineOrder != null))
        {
            Dictionary<int, List<string>> checkUserSeqByOrder = new Dictionary<int, List<string>>();

            for (int i = 0; i < nApprLineCount; i++)
            {
                int order = Convert.ToInt32(listApprLineOrder[i]);
                //중복체크 필요... ApproveLine에 같은 Order일 경우 중복해서 들어오는것을 막는다..
                if (checkUserSeqByOrder.ContainsKey(order))
                {
                    if (checkUserSeqByOrder[order].Contains(listApprLineSeq[i]))
                        continue;
                    else
                    {
                        checkUserSeqByOrder[order].Add(listApprLineSeq[i]);
                    }
                }
                else
                {
                    List<string> list = new List<string>();
                    list.Add(listApprLineSeq[i]);
                    checkUserSeqByOrder.Add(order, list);
                }

                if (m_step == 0 || m_step == 2)
                    approverList.Add(new SGApprover(listApprLineName[i], listApprLineRank[i], listApprLineDeptName[i], listApprLineDeptSeq[i], listApprLineSeq[i], listApprLineOrder[i]));  // 결재자명, 결재자 직위, 결재자 부서명, 결재자 Seq, 결재자 Order
                else //1번 STEP OR 결재는 단일단계 결재이므로 결재 순서를 본인을 제외하고는 1로 교정해준다
                {
                    if (i == 0)
                        approverList.Add(new SGApprover(listApprLineName[i], listApprLineRank[i], listApprLineDeptName[i], listApprLineDeptSeq[i], listApprLineSeq[i], listApprLineOrder[i]));  // 결재자명, 결재자 직위, 결재자 부서명, 결재자 Seq, 결재자 Order
                    else
                        approverList.Add(new SGApprover(listApprLineName[i], listApprLineRank[i], listApprLineDeptName[i], listApprLineDeptSeq[i], listApprLineSeq[i], "1"));  // 결재자명, 결재자 직위, 결재자 부서명, 결재자 Seq, 결재자 Order
                }

            }
        }
        last = approverList.Last();

        //추후 사용 가능
        //InitDeptSeq(groupID, sgLoginData.GetUserID(), listApprLineDeptName);

    }


    /// <summary>
    /// 결재자 OK 버튼이 반응하는 이벤트
    /// 초기 결재라인 생성
    /// </summary>
    public void ApproveLineChange()
    {
        approverList.Clear();
        //InitApproveLine();
        //아래로 InitApproveLine 과 크게 다르지 않아서 InitApproveLine 수행으로 변경함 2021/03/08 YKH

        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        SGUserData sgUserData = null;
        sgUserData = (SGUserData)HSCmdCenter.GetUserData(groupID);
        if (sgUserData == null)
            return;

        string strUserSeq = sgUserData.GetUserSequence();

        SGLoginData sgLoginData = null;
        sgLoginData = (SGLoginData)HSCmdCenter.GetLoginData(groupID);
        if (sgLoginData == null)
            return;
        int step = sgLoginData.GetApproveStep();

        ISGUserInfo sgUserInfo = sgUserSvr.GetUserInfo(groupID);

        m_step = step;

        string strApprLineName = sgUserData.GetUserName();
        string strApprLineRank = sgUserData.GetRank();
        string strApprLineDeptName = sgUserData.GetTeamName();
        string strApprLineDeptSeq = sgUserData.GetTeamCode();
        string strApprLineSeq = sgUserData.GetUserSequence();
        string strApprLineOrder = "0";
        approverList.Add(new SGApprover(strApprLineName, strApprLineRank, strApprLineDeptName, strApprLineDeptSeq, strApprLineSeq, strApprLineOrder));

        SGApprLineData sgApprLineData = null;
        sgApprLineData = (SGApprLineData)HSCmdCenter.GetApprLineData(groupID);
        if (sgApprLineData == null)
        {
            last = approverList.Last();
            StateHasChanged();
            return;
        }

        apprLinkedList = null;
        apprLinkedList = sgApprLineData.GetApprAndLineData();
        if (apprLinkedList == null || apprLinkedList.Count <= 0 || (sgLoginData.GetApprove() == false || sgLoginData.IsVipUser() || sgUserInfo.GetUserApprPos(false, SGAppMgrSvc.OpConfigInfoService.GetUseAllProxyAuthority(groupID)) > 1))
        {
            last = approverList.Last();
            StateHasChanged();
            return;
        }

        foreach (var item in apprLinkedList)
        {
            if (strUserSeq.Equals(item.UserSeq))
                continue;

            strApprLineName = item.Name;
            strApprLineRank = item.Grade;
            strApprLineDeptName = item.DeptName;
            strApprLineDeptSeq = item.DeptSeq;
            strApprLineSeq = item.UserSeq;
            //AndOr 결재에서는 apvOrder서 설정되서 넘어오므로 apvOrder값을 사용 2021/03/11
            if (m_step == 2 && item.nApvOrder != 0)
                strApprLineOrder = item.nApvOrder.ToString();
            else
                strApprLineOrder = item.Index;

            approverList.Add(new SGApprover(strApprLineName, strApprLineRank, strApprLineDeptName, strApprLineDeptSeq, strApprLineSeq, strApprLineOrder));
        }
        last = approverList.Last();

        StateHasChanged();
    }

    private void InitDeptSeq(int groupID, string curUserID, List<string> lineDeptName)
    {
        HSCmdCenter.sgPageEvent.SetQueryListEvent(groupID, SearchListResult);

        string strQuery = "";

        SGQueryExtend sgQueryExtend = new SGQueryExtend();


        for (int i = 0; i < lineDeptName.Count; i++)
        {
            strQuery = sgQueryExtend.GetDeptInfo(lineDeptName[i]);
            HSCmdCenter.SendListQuery(groupID, curUserID, strQuery);
        }
    }

    private void SearchListResult(int groupId, SGData e)
    {
        List<Dictionary<int, string>> detailData = null;
        string deptName = "";
        string deptSeq = "";

        string result = e.GetTagData("RESULT");
        string reason = e.GetTagData("REASON");
        int count = Int32.Parse(e.GetTagData("COUNT"));  //결과레코드수
        detailData = e.GetSvrRecordData2("RECORD");

        //같은 이름의 부서명이 있을지도 모르기 때문에 결과가 1로 확실한 데이터만 수정 진행
        if (count == 1)
        {
            for (int i = 0; i < approverList.Count; i++)
            {
                detailData[0].TryGetValue(0, out deptSeq);
                detailData[0].TryGetValue(1, out deptName);

                if (approverList[i].deptName.Equals(deptName))
                {
                    approverList[i].deptSeq = deptSeq;
                }
            }
        }

        StateHasChanged();
    }


    public class SGApprover
    {
        public string Name { get; set; }
        public string deptName { get; set; }
        public string deptSeq { get; set; }
        public string Grade { get; set; }
        public string Seq { get; set; }
        public string Order { get; set; }
        public string attrClass;


        public SGApprover() { }
        public SGApprover(string name, string grade, string deptname, string seq, string order)
        {
            Name = name;
            Grade = grade;
            deptName = deptname;
            deptSeq = "-";
            Seq = seq;
            Order = order;
            if (Order.Equals("-99") || Order.Equals("0"))
                attrClass = "ml-1";
            else
                attrClass = "";
        }

        public SGApprover(string name, string grade, string deptname, string deptseq, string seq, string order)
        {
            Name = name;
            Grade = grade;
            deptName = deptname;
            deptSeq = deptseq;
            Seq = seq;
            Order = order;
            if (Order.Equals("-99") || Order.Equals("0"))
                attrClass = "ml-1";
            else
                attrClass = "";
        }
    }

}
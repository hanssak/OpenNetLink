@using OpenNetLinkApp.Data.SGDicData.SGUnitData
@using OpenNetLinkApp.Data.SGSettings
@using OpenNetLinkApp.Models.SGSettings
@using HsNetWorkSG
@inject ISGAppManagerService SGAppMgrSvc
@inject HSCmdCenter HSCmdCenter
@inject PageStatusService pageService

@if (m_step == 0)
{
    @foreach (SGApprover app in approverList)
    {
        <button type="button" class="btn btn-line btn-sm col-xs-2 @app.attrClass">
            <i class="fas fa-user "></i> @app.Name @app.Grade
        </button>
        @if (!last.Equals(app))
        {
            <label class="linelabel"><i class="fas fa-angle-right"></i></label>
        }
    }
}
else
{
    @for (int i = 0; i < approverList.Count; i++)
    {
        SGApprover cApv = approverList[i];
        SGApprover nApv = null;
        @if (approverList.Count - 1 != i)
        {
            nApv = approverList[i + 1];
        }
        <button type="button" class="btn btn-line btn-sm col-xs-2 @cApv.attrClass">
            <i class="fas fa-user "></i> @cApv.Name @cApv.Grade
        </button>
        @if (nApv != null)
        {
            @if (!cApv.Order.Equals(nApv.Order))
            {
                <label class="linelabel"><i class="fas fa-angle-right"></i></label>
            }
            else
            {
                <label class="linelabel">or</label>
            }
        }
    }
}

@code {
    private List<SGApprover> approverList = new List<SGApprover>();
    private SGApprover last = null;
    ISGSideBarUIService SideBarUISvc;
    SGSettingsDBProc sgSettingProc;
    ISGSiteConfigService siteConfig;
    //결재단계 멤버변수 추가 0:AND 1:OR 2:AND+OR
    int m_step = 0;
    string m_preLineOrder = "";

    protected override void OnInitialized()
    {
        sgSettingProc = SGSettingsDBProc.Instance;
        siteConfig = SGAppMgrSvc.SiteConfigInfoService;
        SideBarUISvc = SGAppMgrSvc.SideBarUIService;
        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;
        if (pageService.GetInitApprLine(groupID) == false)
        {
            bool bLocalSave = siteConfig.GetUseApprLineLocalSave(groupID);
            if (bLocalSave == true)
            {
                bool bApprLineExist = false;
                SGSettingData sgSettingData = null;
                sgSettingData = sgSettingProc.SelectSettingData(groupID);
                if (sgSettingData != null)
                {
                    SGRSACrypto sgRSACrypto = new SGRSACrypto();
                    string strEncApprLine = sgSettingProc.GetSettingApprLine(groupID);
                    string strApprLine = "";
                    sgRSACrypto.ValueDecrypt(strEncApprLine, out strApprLine);

                    SGUserData sgUserData = null;
                    sgUserData = (SGUserData)HSCmdCenter.GetUserData(groupID);
                    if (sgUserData == null)
                    {
                        ApproveLineChange();
                        base.OnInitialized();
                        return;
                    }

                    string strUserSeq = sgUserData.GetUserSequence();

                    SGApprLineData sgApprLineData = null;
                    sgApprLineData = (SGApprLineData)HSCmdCenter.GetApprLineData(groupID);
                    if (sgApprLineData != null)
                    {
                        bApprLineExist = sgApprLineData.LocalLoadANDApprLineData(strApprLine, strUserSeq);
                        if (!bApprLineExist)
                            InitApproveLine();
                    }
                }
                if (bApprLineExist)
                    ApproveLineChange();
            }
            else
                InitApproveLine();
            pageService.SetInitApprLine(groupID, true);
            //bInitApprLine = true;
        }
        else
            ApproveLineChange();
        base.OnInitialized();
    }

    public void InitApproveLine()
    {
        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        SGLoginData sgLoginData = null;
        sgLoginData = (SGLoginData)HSCmdCenter.GetLoginData(groupID);
        if (sgLoginData == null)
            return;

        int step = sgLoginData.GetApproveStep();
        m_step = step;

        SGApprLineData sgApprLineData = null;
        sgApprLineData = (SGApprLineData)HSCmdCenter.GetApprLineData(groupID);
        if (sgApprLineData == null)
        {
            SGUserData sgUserInfo = null;
            sgUserInfo = (SGUserData)HSCmdCenter.GetUserData(groupID);
            if (sgUserInfo == null)
                return;

            string strApprLineName = sgUserInfo.GetUserName();
            string strApprLineRank = sgUserInfo.GetRank();
            string strApprLineDeptName = sgUserInfo.GetTeamName();
            string strApprLineSeq = sgUserInfo.GetUserSequence();
            string strApprLineOrder = "0";
            approverList.Add(new SGApprover(strApprLineName, strApprLineRank, strApprLineDeptName, strApprLineSeq, strApprLineOrder));
            return;
        }

        List<string> listApprLineName = null;                      // 결재자 이름
        List<string> listApprLineRank = null;                      // 결재자 직위
        List<string> listApprLineDeptName = null;                  // 결재자 부서명
        List<string> listApprLineSeq = null;                       // 결재자 Seq
        List<string> listApprLineOrder = null;                     // 결재자 Order

        switch (step)
        {
            case 0:                                                                                                 // AND 결재
                listApprLineName = sgApprLineData.GetBaseApprAndLineName();            // 결재자 이름
                listApprLineRank = sgApprLineData.GetBaseApprAndLineRank();            // 결재자 직위
                listApprLineDeptName = sgApprLineData.GetBaseApprAndLineDeptName();    // 결재자 부서명
                listApprLineSeq = sgApprLineData.GetBaseApprAndLineSeq();              // 결재자 Seq
                listApprLineOrder = sgApprLineData.GetBaseApprAndLineOrder();          // 결재자 Order
                break;
            case 1:                                                                                                 // OR 결재
                listApprLineName = sgApprLineData.GetBaseApprAndLineName();            // 결재자 이름
                listApprLineRank = sgApprLineData.GetBaseApprAndLineRank();            // 결재자 직위
                listApprLineDeptName = sgApprLineData.GetBaseApprAndLineDeptName();    // 결재자 부서명
                listApprLineSeq = sgApprLineData.GetBaseApprAndLineSeq();              // 결재자 Seq
                listApprLineOrder = sgApprLineData.GetBaseApprAndLineOrder();          // 결재자 Order
                break;
            case 2:                                                                                                 // AND-OR 결재
                break;
            default:
                break;
        }

        if (listApprLineName == null)
            return;

        int nApprLineCount = listApprLineName.Count;
        bool bApprUseType = sgLoginData.GetApprove();
        if ((bApprUseType == false) && (nApprLineCount > 0))
            nApprLineCount = 1;
        for (int i = 0; i < nApprLineCount; i++)
        {
            if ((listApprLineName != null) && (listApprLineRank != null) && (listApprLineDeptName != null) && (listApprLineSeq != null) && (listApprLineOrder != null))
            {
                if( m_step == 0 || m_step == 2)
                    approverList.Add(new SGApprover(listApprLineName[i], listApprLineRank[i], listApprLineDeptName[i], listApprLineSeq[i], listApprLineOrder[i]));  // 결재자명, 결재자 직위, 결재자 부서명, 결재자 Seq, 결재자 Order
                else //1번 STEP OR 결재는 단일단계 결재이므로 결재 순서를 본인을 제외하고는 1로 교정해준다
                {
                    if( i == 0 )
                        approverList.Add(new SGApprover(listApprLineName[i], listApprLineRank[i], listApprLineDeptName[i], listApprLineSeq[i], listApprLineOrder[i]));  // 결재자명, 결재자 직위, 결재자 부서명, 결재자 Seq, 결재자 Order
                    else
                        approverList.Add(new SGApprover(listApprLineName[i], listApprLineRank[i], listApprLineDeptName[i], listApprLineSeq[i], "1"));  // 결재자명, 결재자 직위, 결재자 부서명, 결재자 Seq, 결재자 Order
                }
            }
        }
        last = approverList.Last();
    }
    //결재자 OK 버튼이 반응하는 이벤트
    public void ApproveLineChange()
    {
        approverList.Clear();
        InitApproveLine();

        //아래로 InitApproveLine 과 크게 다르지 않아서 InitApproveLine 수행으로 변경함 2021/03/08 YKH
        @*ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        SGUserData sgUserInfo = null;
        sgUserInfo = (SGUserData)HSCmdCenter.GetUserData(groupID);
        if (sgUserInfo == null)
            return;

        string strUserSeq = sgUserInfo.GetUserSequence();

        SGLoginData sgLoginData = null;
        sgLoginData = (SGLoginData)HSCmdCenter.GetLoginData(groupID);
        if (sgLoginData == null)
            return;
        int step = sgLoginData.GetApproveStep();
        m_step = step;

        string strApprLineName = sgUserInfo.GetUserName();
        string strApprLineRank = sgUserInfo.GetRank();
        string strApprLineDeptName = sgUserInfo.GetTeamName();
        string strApprLineSeq = sgUserInfo.GetUserSequence();
        string strApprLineOrder = "0";
        approverList.Add(new SGApprover(strApprLineName, strApprLineRank, strApprLineDeptName, strApprLineSeq, strApprLineOrder));

        SGApprLineData sgApprLineData = null;
        sgApprLineData = (SGApprLineData)HSCmdCenter.GetApprLineData(groupID);
        if (sgApprLineData == null)
        {
            last = approverList.Last();
            StateHasChanged();
            return;
        }


        LinkedList<ApproverInfo> apprLinkedList = null;
        apprLinkedList = sgApprLineData.GetApprAndLineData();
        if ((apprLinkedList == null) || (apprLinkedList.Count <= 0))
        {
            last = approverList.Last();
            StateHasChanged();
            return;
        }

        foreach (var item in apprLinkedList)
        {
            if (strUserSeq.Equals(item.UserSeq))
                continue;

            strApprLineName = item.Name;
            strApprLineRank = item.Grade;
            strApprLineDeptName = item.DeptName;
            strApprLineSeq = item.UserSeq;
            strApprLineOrder = item.Index;
            approverList.Add(new SGApprover(strApprLineName, strApprLineRank, strApprLineDeptName, strApprLineSeq, strApprLineOrder));
        }
        last = approverList.Last();
        
        StateHasChanged();*@
    }

    public class SGApprover
    {
        public string Name { get; set; }
        public string deptName { get; set; }
        public string Grade { get; set; }
        public string Seq { get; set; }
        public string Order { get; set; }
        public string attrClass;


        public SGApprover() { }
        public SGApprover(string name, string grade, string deptname, string seq, string order)
        {
            Name = name;
            Grade = grade;
            deptName = deptname;
            Seq = seq;
            Order = order;
            if (Order.Equals("-99") || Order.Equals("0"))
                attrClass = "ml-4";
            else
                attrClass = "";
        }
    }

}
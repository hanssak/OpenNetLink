@using OpenNetLinkApp.Services
@using OpenNetLinkApp.Data.SGDicData.SGUnitData
@using OpenNetLinkApp.Data.SGQuery
@using OpenNetLinkApp.PageEvent
@inject IJSRuntime JSRuntime
@inject XmlConfService XmlConf
@inject HSCmdCenter HSCmdCenter
@inject ISGAppManagerService SGAppMgrSvc

<div class="modal fade" id="SGConfirm" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-default1">
        <div class="modal-content">
            <div class="modal-header-default">
                <div class="modal-title"><i class="fas fa-key mr-2 blue-txt"></i>Confirm</div>
            </div>
            <div class="modal-body-default">
                <div class="alert_txt ">
                    <div class="col-md-12 mt-3 p-0">
                        @((MarkupString)stDesc) 
                    </div>
                </div>
            </div>
            <div class="modal-footer-default">
                <button @onclick="doOk" type="button" class="btn btn-md btn-black mr-0"><i class="fas fa-times"></i>@XmlConf.GetTitle("T_COMMON_OK")</button>
                <button @onclick="doCancel" type="button" class="btn btn-md btn-black mr-0"><i class="fas fa-times"></i>@XmlConf.GetTitle("T_COMMON_CANCEL")</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@code {
    [Parameter]
    public EventCallback<List<string>> OnSelectOK { get; set; }
    [Parameter]
    public EventCallback<List<string>> OnSelectCancel { get; set; }

    private string stDesc { get; set; }
    public List<string> lstInfo = new List<string>();

    public void setDesc(string desc)
    {
        stDesc = desc;
        StateHasChanged();
    }

    private async void doOk()
    {
        await OnSelectOK.InvokeAsync(lstInfo);
        closePopUp();
    }
    private async void doCancel()
    {
        await OnSelectCancel.InvokeAsync(lstInfo);
        closePopUp();
    }

    public async Task openPopUp()
    {
        object[] param = { "SGConfirm" };
        await JSRuntime.InvokeAsync<object>("openPopUp", param);
    }

    public void closePopUp()
    {
        object[] param = { "SGConfirm" };
        JSRuntime.InvokeAsync<object>("closePopUp", param);
    }
}

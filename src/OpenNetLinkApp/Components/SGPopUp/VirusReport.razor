@using OpenNetLinkApp.Services
@using OpenNetLinkApp.Data.SGDicData.SGUnitData
@using OpenNetLinkApp.Data.SGQuery
@using OpenNetLinkApp.PageEvent
@inject IJSRuntime JSRuntime
@inject XmlConfService XmlConf
@inject HSCmdCenter HSCmdCenter
@inject ISGAppManagerService SGAppMgrSvc
@inject PageStatusService pageService

<div class="modal fade" id="modal-virusreport" data-backdrop="static">
    <div class="modal-dialog modal-default1">
        <div class="modal-content">
            <div class="modal-header-default">
                <div class="modal-title"><i class="fas fa-shield-virus mr-2 blue-txt"></i>@strSysName</div>
                <!--<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>-->
            </div>
            <div class="modal-body-default">
                <!-- content -->

                <div class="alert_txt">
                    <label class="mb-3 pl-2 pr-2" style="background-color:#e20000; color:#fff;"><i class="fas fa-virus mr-2"></i>@strInfo</label>
                    <table class="table table-boarder table_virus">
                        <colgroup>
                            <col width="25%">
                            <col width="75%">
                        </colgroup>
                        <tr>
                            <th>@strTitle</th>
                            <td>@m_strFileTransTitle</td>
                        </tr>
                        <tr>
                            <th>@strVirusContentInfo</th>
                            <td>
                                @m_strVirusContent
                            </td>
                        </tr>
                        <tr>
                            <th>@strDetailContent</th>
                            <td>
                                @strUserInfo
                            </td>
                        </tr>
                    </table>
                </div>


                <!--/. content -->
            </div>
            <div class="modal-footer-default">
                <button @onclick="closePopUp" type="button" class="btn bg-gradient-primary pl-4 pr-4 mr-0  float-right">@XmlConf.GetTitle("T_COMMON_OK")</button>
                <!--<button @onclick="closePopUp" type="button" class="btn bg-gradient-secondary pl-4 pr-4 mr-0  float-right">@XmlConf.GetTitle("T_COMMON_CANCEL")</button>-->
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@code {
    public string strSysName = "";
    public string strInfo = "";
    public string strTitle = "";
    public string strVirusContentInfo = "";
    public string strDetailContent = "";
    public string strUserInfo = "";

    public string m_strTransSeq;
    public int m_GroupID;
    public string m_strFileTransTitle;
    public string m_strVirusContent;
    public bool m_bVirus;



    public async Task openPopUp()
    {
        SendConfirm();
        object[] param = { "modal-virusreport" };
        await JSRuntime.InvokeAsync<object>("openPopUp", param);
    }

    public void closePopUp()
    {
        if (pageService.GetConnectStatus(m_GroupID) == false)
        {
            string strMsg = XmlConf.GetErrMsg("E_0218");           // 현재 오프라인 상태입니다./r/n재접속 중이오니 잠시만 기다려 주십시요.
            strMsg = strMsg.Replace("/r/n", "<br>");
            ShowMessage("error", strMsg);
            return;
        }
        object[] param = { "modal-virusreport" };
        JSRuntime.InvokeAsync<object>("closePopUp", param);
    }

    public void SetInit(int groupID, string transSeq, string title, string virusContent,bool bVirus)
    {
        m_GroupID = groupID;
        m_strTransSeq = transSeq;
        m_strFileTransTitle = title;
        m_strVirusContent = virusContent;
        m_bVirus = bVirus;
        StateHasChanged();
    }

    public void SendConfirm()
    {
        SGLoginData sgLoginData = null;
        sgLoginData = (SGLoginData)HSCmdCenter.GetLoginData(m_GroupID);
        if (sgLoginData == null)
            return;
        string strUserID = sgLoginData.GetUserID();
        HSCmdCenter.SendAPTAndVirusConfirm(m_GroupID, strUserID, m_strTransSeq, m_bVirus);
    }

    protected override void OnInitialized()
    {
        InitText();
    }

    public void InitText()
    {
        strSysName = XmlConf.GetTitle("T_SYSTEMNAME2");                         // 망연계솔루션
        strInfo = XmlConf.GetTitle("T_DETAIL_DETECT_VIRUS");                    // 전송파일에 바이러스가 발견되었습니다.
        strTitle = XmlConf.GetTitle("T_DETAIL_TITLE");                          // 제목
        strVirusContentInfo = XmlConf.GetTitle("T_VIRUS_DETAILS");              // 바이러스 내역
        strDetailContent = XmlConf.GetTitle("T_COMMON_DETAILLIST");             // 상세내용
        strUserInfo = XmlConf.GetTitle("T_COMMON_DETAILLIST_VIEW");             // [전송관리] - [상세보기] 에서 확인하세요.
    }

    private void ShowMessage(string strType, string strMsg)
    {
        //type: success, info, waring, error 2020/07/02 YKH
        string strSystemName = XmlConf.GetTitle("T_SYSTEMNAME2");                  // 망연계 솔루션
        object[] param = { strType, strSystemName, strMsg };
        JSRuntime.InvokeAsync<object>("fireToastMessage", param);
    }



}

@using OpenNetLinkApp.PageEvent
@using OpenNetLinkApp.Data.SGDicData.SGUnitData
@inject HSCmdCenter HsCmdCenter
@inject IJSRuntime JSRuntime
@inject XmlConfService XmlConf
@inject WebWindow window
@inject NavigationManager MyNavigationManager
@inject PageStatusService pageService

<div class="modal fade" id="modal-displaylock" data-backdrop="static" data-keyboard="false">
    
    <div class="modal-dialog" style="width:450px !important; height:500px !important;">
        <div class="modal-content border-0" style="!important; background:url('/images/adminlte/lock_bg.png');">
            <!--s login popup-->

            <div class="login-box" style="width:450px !important;">
                <div class="row1">

                    <div class=" login-card-body" style="background-color:none !important; height:500px !important;">

                        <!--<div class="modal-header1">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                        </div>-->

                        <div class="text-center"><img src="/images/adminlte/lock_icon.png"></div>

                        <div class="lock-text">@strLockInfo</div>

                        <div class="login_w">

                            <div class="input-group mb-2">
                                <input id="lockPw" type="password" class="form-control-login border-0 lock-pass" placeholder="Password" @bind="strInputPW" @onkeyup="keyCheck">
                            </div>

                            <div class="row">

                                <div class="col-12  pt-2">
                                    <button type="submit" class="btn btn-login btn-block btn_open" @onclick="ScreenLockCear">@strLockClear</button>
                                    <button type="submit" class="btn btn-login btn-block btn_exit" @onclick="ProgramExit">@strProgramExit</button>
                                </div>
                                <div class="col-12 text-center pt-3 copy">Copyright &copy  HANSSAK Corp.  All rights reserved.</div>

                            </div>
                        </div>

                    </div>
                </div>

            </div>
            <!--/.e login popup-->
        </div>
        <!-- /.modal-content -->
    </div>
 </div>

@code {

    public string strLockInfo = "";
    public string strLockClear = "";
    public string strProgramExit = "";
    public string strInputPW = "";

    public async Task openPopUp()
    {
        object[] param = { "modal-displaylock" };
        await JSRuntime.InvokeAsync<object>("openPopUp", param);
    }

    public void closePopUp()
    {
        strInputPW = "";
        StateHasChanged();
        object[] param = { "modal-displaylock" };
        JSRuntime.InvokeAsync<object>("closePopUp", param);
    }

    protected override void OnInitialized()
    {
        InitText();
        HsCmdCenter.sgPageEvent.SetScreenLockClearNotiEvent(ScreenLockCearNoti);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        object[] param = { "lockPw" };
        JSRuntime.InvokeAsync<object>("changeFocus", param);
        base.OnAfterRender(firstRender);
    }

    public void InitText()
    {
        strLockInfo = XmlConf.GetInfoMsg("I_0043");                 // 비밀번호를 입력하여 주십시오.
        strLockClear = XmlConf.GetTitle("T_COMMON_SCRLOCKRCLEAR");      // 잠금 해제
        strProgramExit = XmlConf.GetTitle("T_COMMON_APPEXIT");      // 프로그램 종료
    }

    private void keyCheck(KeyboardEventArgs arg)
    {
        if (arg.Key == "Enter")
            ScreenLockCear();
    }

    public void ScreenLockCear()
    {

        if (strInputPW.Equals(""))
        {
            string strMsg = XmlConf.GetInfoMsg("I_0043");                       // 비밀번호를 입력하여 주십시오.
            ShowMessage("warn", strMsg);
            return;
        }
        int groupID = 0;
        if (pageService.GetConnectStatus(groupID) == false)
        {
            string strMsg = XmlConf.GetErrMsg("E_0218");           // 현재 오프라인 상태입니다./r/n재접속 중이오니 잠시만 기다려 주십시요.
            strMsg = strMsg.Replace("/r/n", "<br>");
            ShowMessage("error", strMsg);
            return;
        }

        SGLoginData sGLoginData = null;
        sGLoginData = (SGLoginData)HsCmdCenter.GetLoginData(groupID);
        if (sGLoginData == null)
            return;
        string strUserID = sGLoginData.GetUserID();

        SGSvrData sgSvrData = null;
        sgSvrData = (SGSvrData)HsCmdCenter.GetSGSvrData(groupID);
        if (sgSvrData == null)
            return;

        string strLoginType = sgSvrData.GetBasicTagData("LOGINTYPE");

        HsCmdCenter.SendScreenLockClear(groupID, strUserID, strInputPW,strLoginType);

    }

    public void ProgramExit()
    {
        window.ProgramExit();
    }

    public void ScreenLockCearNoti(int groupID, OpenNetLinkApp.PageEvent.PageEventArgs e)
    {
        if(e.result!=0)
        {
            string strMsg = XmlConf.GetErrMsg("E_0010");    // 화면 잠금 해제가 실패 했습니다./ r / n비밀번호를 다시 입력 해주세요.
            strMsg = strMsg.Replace("/r/n", "<br>");
            ShowMessage("error", strMsg);
            return;
        }
        string strReason = e.strMsg;
        pageService.SetScrLocking(false);
        closePopUp();
    }

    private void ShowMessage(string strType, string strMsg)
    {
        //type: success, info, waring, error 2020/07/02 YKH
        string strSystemName = XmlConf.GetTitle("T_SYSTEMNAME2");                  // 망연계 솔루션
        strMsg = strMsg.Replace("/r/n", "<br/>");
        object[] param = { strType, strSystemName, strMsg };
        JSRuntime.InvokeAsync<object>("fireToastMessage", param);
    }
}

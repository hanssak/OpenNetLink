@inject IJSRuntime JSRuntime
<div class="modal fade" id="modal-alert2" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-default1">
        <div class="modal-content">
            <div class="modal-header3 modal-outline2 border-bottom">
                <h5 class="modal-title pt-1 text-bold"><i class="fas fa-cog mr-1"></i> @title </h5>
            </div>
            <div class="modal-body1">
                <div class="card-body pt-2 pb-2">
                    <div class="text-center alert_txt">
                        @((MarkupString)message)
                    </div>
                </div>
            </div>
            <div class="modal-footer1">
                <button type="button" class="btn bg-gradient-info pl-4 pr-4 mr-0  float-right" @onclick="Confirm">확인</button>
                @if (mode == 2)
                {
                    <button type="button" class="btn bg-gradient-secondary pl-4 pr-4 mr-0  float-right" @onclick="Cancel">취소</button>
                }
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@code {


    /// <summary>
    /// SGAlert로 사용 ~~ 사용안함.~~~~~~~~~~
    /// </summary>
    public string title { get; set; }
    public string message { get; set; }
    public int mode { get; set; }   //1: alert, confirm
    public int groupId = 0;

    public void Confirm()
    {
        OnConfirm.InvokeAsync("confirm");
        closePopUp();
    }

    public void Cancel()
    {
        OnCancel.InvokeAsync("cancel");
        closePopUp();
    }
    [Parameter]
    public EventCallback<string> OnConfirm { get; set; }

    [Parameter]
    public EventCallback<string> OnCancel { get; set; }


    public async Task openPopUp(string tle, string msg, int md, int gid)
    {
        title = tle;
        message = msg;
        mode = md;
        groupId = gid;
        StateHasChanged();

        object[] param = { "modal-alert2" };
        await JSRuntime.InvokeAsync<object>("openPopUp", param);
    }

    public void closePopUp()
    {
        object[] param = { "modal-alert2" };
        JSRuntime.InvokeAsync<object>("closePopUp", param);
    }
}

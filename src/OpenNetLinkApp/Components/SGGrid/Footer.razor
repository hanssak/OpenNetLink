@using OpenNetLinkApp.PageEvent
@using OpenNetLinkApp.Data.SGDicData.SGUnitData
@using OpenNetLinkApp.Data.SGQuery
@using Serilog
@using AgLogManager
@inject ISGAppManagerService SGAppMgrSvc
@inject PageStatusService pageService
@inject XmlConfService XmlConf
@inject IJSRuntime JSRuntime
@inject HSCmdCenter HsCmdCenter

<div class="card-footer" style="padding:.5rem 1.25rem !important; font-size:.8rem !important;">
    <div style="float:left; width:20%;">
        <div class="dataTable_info" id="example2_info" role="status" aria-live="polite">
            @if (GetUseUrlRedirectionByServer())
            {
                if (GetUseUrlRedirectionByUser())
                {
                    <span><i id="iUrlFlag" class="fas fa-globe url_active"></i>&nbsp;@strURLAuto</span> <!--URL 자동전환 사용-->
                }
                else
                {
                    <span><i id="iUrlFlag" class="fas fa-globe url_i"></i>&nbsp;@XmlConf.GetTitle("T_INFO_NO_USE_URLREDIRECT")</span> <!--URL 자동전환 중지-->
                }
            }
        </div>
    </div>

    <div style="float:right; width:auto;">

        <ul class="pagination pagination-sm m-0 ">
            <li>@strRemainFile : </li>                                                  <!--남은 일일 파일전송-->
            <li style="padding:5px 10px; width:100px;">
                <div class="progress progress-xs">
                    <div class="progress-bar bg-success" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width: @strDayFileTransRemainSizePer; vertical-align:middle;">
                        <span class="sr-only">100% Complete (success)</span>
                    </div>
                </div>
            </li>
            <li><label class="form-check-label" />@strDayFileTransRemainSize</li>
            <li style="padding:5px 10px; width:100px;">
                <div class="progress progress-xs">
                    <div class="progress-bar bg-info" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width: @strDayFileTransRemainCountPer; vertical-align:middle;">
                        <span class="sr-only">100% Complete (success)</span>
                    </div>
                </div>
            </li>
            <li><label class="form-check-label" />@strDayFileTransRemainCount</li>                 <!--{0} 건-->
            <li><i @onclick="DayInfoChange" class="fas fa-caret-square-down ch" style="cursor:pointer;"></i></li>
        </ul>

    </div>

</div>

@code {
    public string strURLAuto = "";
    ISGSideBarUIService SideBarUISvc;
    ISGAppConfigService AppConfigSvc;

    public string strDayFileTransRemainCount = "";
    public string strDayFileTransRemainSize = "";
    public string strDayClipRemainCount = "";
    public string strDayClipRemainSize = "";
    public string strDayFileTransRemainCountPer = "";
    public string strDayFileTransRemainSizePer = "";
    public string strDayClipRemainCountPer = "";
    public string strDayClipRemainSizePer = "";
    public string strRemainFile = "";


    private static Serilog.ILogger CLog => Serilog.Log.ForContext<Footer>();

    protected override void OnInitialized()
    {

        SideBarUISvc = SGAppMgrSvc.SideBarUIService;
        AppConfigSvc = SGAppMgrSvc.AppConfigInfoService;

        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        CLog.Here().Information($"Footer - OnInitialized : {groupID}");

        strURLAuto = XmlConf.GetTitle("T_INFO_USE_URLREDIRECT_AUTO");                       // URL 자동전환 사용

        HsCmdCenter.sgPageEvent.SetUseDayFileNotiEventAdd(groupID, UseDayFileResult);
        HsCmdCenter.sgPageEvent.SetUseDayClipNotiEventAdd(groupID, UseDayClipResult);

        if (pageService.GetLoginComplete(groupID) != true)
            SendDayFileInfo();
        else
            UseDayInfoDisplay();
        HsCmdCenter.sgPageEvent.SetDayInfoFooterNotiEventAdd(groupID, DayInfoFooterChange);

        string strGroupIDMenu = "";
        strGroupIDMenu = String.Format($"{groupID}-Footer");
        HsCmdCenter.sgPageEvent.SetUrlRedirectionSetEventAdd(strGroupIDMenu, RefreshUI);
    }


    public bool GetUseUrlRedirectionByUser()
    {

        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        CLog.Here().Information($"GetUseUrlRedirectionByUser - groupID : {groupID}");

        //return AppConfigSvc.GetURLAutoTrans(groupID);
        return SGAppMgrSvc.OpConfigInfoService.GetURLAutoTrans(groupID);
    }

    public bool GetUseUrlRedirectionByServer()
    {

        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        CLog.Here().Information($"GetUseUrlRedirectionByServer - groupID : {groupID}");

        SGLoginData sgLoginData = null;
        sgLoginData = (SGLoginData)HsCmdCenter.GetLoginData(groupID);
        if (sgLoginData == null)
            return false;

        return sgLoginData.GetURLRedirect();
    }


    /**
    *@brief 화면 다시 그림
    */
    public void RefreshDisplay()
    {
        StateHasChanged();
    }


    /**
    *@brief 서버에서 받은 1일 file / Clipboard Data를 설정에 저장된 대로 호출때 (file이면file 정보, clipboard이면 clipboard정보) 화면에 뿌려줌
    */
    public void UseDayInfoDisplay()
    {
        SideBarUISvc = SGAppMgrSvc.SideBarUIService;
        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        CLog.Here().Information($"UseDayInfoDisplay - groupID : {groupID}");

        bool bFilePreView = pageService.GetDayInfoPrev(groupID);
        if (bFilePreView)
        {
            strRemainFile = XmlConf.GetTitle("T_ETC_ONEDAY_LEFT_FILE");                     // 남은 일일 파일전송

            if (pageService.GetDayFileCountUnLimited(groupID) == true)
            {
                strDayFileTransRemainCount = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
                strDayFileTransRemainCountPer = "100%";
            }
            else
            {
                strDayFileTransRemainCount = XmlConf.GetInfoMsg("I_0128");                                          // {0} 건
                strDayFileTransRemainCount = String.Format(strDayFileTransRemainCount, pageService.GetDayRemainFileCountString(groupID));
                strDayFileTransRemainCountPer = pageService.GetDayRemainFileCountPercent(groupID).ToString() + "%";
            }

            if (pageService.GetDayFileSizeUnLimited(groupID) == true)
            {
                strDayFileTransRemainSize = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
                strDayFileTransRemainSizePer = "100%";
            }
            else
            {
                strDayFileTransRemainSize = pageService.GetDayRemainFileSizeString(groupID);
                strDayFileTransRemainSizePer = pageService.GetDayRemainFileSizePercent(groupID).ToString() + "%";
            }
        }
        else
        {
            strRemainFile = XmlConf.GetTitle("T_ETC_ONEDAY_LEFT_CLIP");                     // 남은 일일 클립보드

            if (pageService.GetDayClipCountUnLimited(groupID) == true)
            {
                strDayClipRemainCount = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
                strDayClipRemainCountPer = "100%";
            }
            else
            {
                strDayClipRemainCount = XmlConf.GetInfoMsg("I_0128");                                          // {0} 건
                strDayClipRemainCount = String.Format(strDayClipRemainCount, pageService.GetDayRemainClipCountString(groupID));
                strDayClipRemainCountPer = pageService.GetDayRemainClipCountPercent(groupID).ToString() + "%";
            }

            if (pageService.GetDayClipSizeUnLimited(groupID) == true)
            {
                strDayClipRemainSize = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
                strDayClipRemainSizePer = "100%";
            }
            else
            {
                strDayClipRemainSize = pageService.GetDayRemainClipSizeString(groupID);
                strDayClipRemainSizePer = pageService.GetDayRemainClipSizePercent(groupID).ToString() + "%";
            }

            strDayFileTransRemainCount = strDayClipRemainCount;
            strDayFileTransRemainSize = strDayClipRemainSize;
            strDayFileTransRemainCountPer = strDayClipRemainCountPer;
            strDayFileTransRemainSizePer = strDayClipRemainSizePer;
        }
        StateHasChanged();
    }

    /**
    *@brief 서버에서 받은 1일 file / Clipboard Data를 호출때마다 전환하며 화면에 뿌려줌
    */
    public void DayInfoChange()
    {
        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        CLog.Here().Information($"DayInfoChange - groupID : {groupID}");

        bool bFilePreView = pageService.GetDayInfoPrev(groupID);
        pageService.SetDayInfoPrev(groupID, !bFilePreView);
        bFilePreView = pageService.GetDayInfoPrev(groupID);
        if (bFilePreView)
        {
            strRemainFile = XmlConf.GetTitle("T_ETC_ONEDAY_LEFT_FILE");                     // 남은 일일 파일전송

            if (pageService.GetDayFileCountUnLimited(groupID) == true)
            {
                strDayFileTransRemainCount = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
                strDayFileTransRemainCountPer = "100%";
            }
            else
            {
                strDayFileTransRemainCount = XmlConf.GetInfoMsg("I_0128");                                          // {0} 건
                strDayFileTransRemainCount = String.Format(strDayFileTransRemainCount, pageService.GetDayRemainFileCountString(groupID));
                strDayFileTransRemainCountPer = pageService.GetDayRemainFileCountPercent(groupID).ToString() + "%";
            }

            if (pageService.GetDayFileSizeUnLimited(groupID) == true)
            {
                strDayFileTransRemainSize = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
                strDayFileTransRemainSizePer = "100%";
            }
            else
            {
                strDayFileTransRemainSize = pageService.GetDayRemainFileSizeString(groupID);
                strDayFileTransRemainSizePer = pageService.GetDayRemainFileSizePercent(groupID).ToString() + "%";
            }
        }
        else
        {
            strRemainFile = XmlConf.GetTitle("T_ETC_ONEDAY_LEFT_CLIP");                     // 남은 일일 클립보드

            if (pageService.GetDayClipCountUnLimited(groupID) == true)
            {
                strDayClipRemainCount = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
                strDayClipRemainCountPer = "100%";
            }
            else
            {
                strDayClipRemainCount = XmlConf.GetInfoMsg("I_0128");                                          // {0} 건
                strDayClipRemainCount = String.Format(strDayClipRemainCount, pageService.GetDayRemainClipCountString(groupID));
                strDayClipRemainCountPer = pageService.GetDayRemainClipCountPercent(groupID).ToString() + "%";
            }

            if (pageService.GetDayClipSizeUnLimited(groupID) == true)
            {
                strDayClipRemainSize = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
                strDayClipRemainSizePer = "100%";
            }
            else
            {
                strDayClipRemainSize = pageService.GetDayRemainClipSizeString(groupID);
                strDayClipRemainSizePer = pageService.GetDayRemainClipSizePercent(groupID).ToString() + "%";
            }

            strDayFileTransRemainCount = strDayClipRemainCount;
            strDayFileTransRemainSize = strDayClipRemainSize;
            strDayFileTransRemainCountPer = strDayClipRemainCountPer;
            strDayFileTransRemainSizePer = strDayClipRemainSizePer;
        }
        StateHasChanged();
    }

    /**
    *@brief 사용안하는듯~
    */
    private async Task ChangeUrlAuthRedirection(bool bOn)
    {

        CLog.Here().Information($"ChangeUrlAuthRedirection - bOn : {bOn}");

        if (bOn == true)
        {
            object[] param = { "on" };
            await JSRuntime.InvokeAsync<object>("changeUrlRedirectionFlag", param);
        }
        else
        {
            object[] param = { "off" };
            await JSRuntime.InvokeAsync<object>("changeUrlRedirectionFlag", param);
        }
    }

    /**
    *@brief
    */
    public void DayInfoFooterChange(int groupID)
    {

        CLog.Here().Information($"DayInfoFooterChange - groupID : {groupID}");

        UseDayInfoDisplay();
    }

    /**
    *@brief 1일 파일전송 가능 용량 / 개수 정보를 받음
    */
    public void UseDayFileResult(int groupID, FileAndClipDayArgs e)
    {

        CLog.Here().Information($"FileTrans - ### - USED size({e.Size}), count({e.Count}) info recv (groupID : {groupID})! ");

        pageService.SetDayUseFile(groupID, e.Size, e.Count);

        if (pageService.GetDayFileCountUnLimited(groupID) == true)
        {
            strDayFileTransRemainCount = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
            strDayFileTransRemainCountPer = "100%";
        }
        else
        {
            strDayFileTransRemainCount = XmlConf.GetInfoMsg("I_0128");                                          // {0} 건
            strDayFileTransRemainCount = String.Format(strDayFileTransRemainCount, pageService.GetDayRemainFileCountString(groupID));
            strDayFileTransRemainCountPer = pageService.GetDayRemainFileCountPercent(groupID).ToString() + "%";
        }

        if (pageService.GetDayFileSizeUnLimited(groupID) == true)
        {
            strDayFileTransRemainSize = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
            strDayFileTransRemainSizePer = "100%";
        }
        else
        {
            strDayFileTransRemainSize = pageService.GetDayRemainFileSizeString(groupID);
            strDayFileTransRemainSizePer = pageService.GetDayRemainFileSizePercent(groupID).ToString() + "%";
        }

        if (pageService.GetLoginComplete(groupID) != true)
        {
            SendDayClipInfo();
            return;
        }
        else
        {
            bool bFilePreView = pageService.GetDayInfoPrev(groupID);
            if (bFilePreView == false)
            {
                DayInfoChange();
                return;
            }
        }
        UseDayInfoDisplay();
    }

    /**
    *@brief  1일 클립보드 전송 가능 용량 / 개수 정보를 받음
    */
    public void UseDayClipResult(int groupID, FileAndClipDayArgs e)
    {

        CLog.Here().Information($"UseDayClipResult - groupID : {groupID}");

        pageService.SetDayUseClip(groupID, e.Size, e.Count);

        if (pageService.GetDayClipCountUnLimited(groupID) == true)
        {
            strDayClipRemainCount = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
            strDayClipRemainCountPer = "100%";
        }
        else
        {
            strDayClipRemainCount = XmlConf.GetInfoMsg("I_0128");                                          // {0} 건
            strDayClipRemainCount = String.Format(strDayClipRemainCount, pageService.GetDayRemainClipCountString(groupID));
            strDayClipRemainCountPer = pageService.GetDayRemainClipCountPercent(groupID).ToString() + "%";
        }

        if (pageService.GetDayClipSizeUnLimited(groupID) == true)
        {
            strDayClipRemainSize = XmlConf.GetTitle("T_ETC_UNLIMITED");                    // 무제한
            strDayClipRemainSizePer = "100%";
        }
        else
        {
            strDayClipRemainSize = pageService.GetDayRemainClipSizeString(groupID);
            strDayClipRemainSizePer = pageService.GetDayRemainClipSizePercent(groupID).ToString() + "%";
        }

        if (pageService.GetLoginComplete(groupID) != true)
        {
            pageService.SetLoginComplete(groupID, true);
        }
        else
        {
            bool bFilePreView = pageService.GetDayInfoPrev(groupID);
            if (bFilePreView == true)
            {
                DayInfoChange();
                return;
            }
        }
        UseDayInfoDisplay();
    }

    /**
    *@brief 1일 파일전송 사용량 정보 요청
    */
    public void SendDayFileInfo()
    {
        CLog.Here().Information($"SendDayFileInfo");

        SGQueryExtend sgQuery = new SGQueryExtend();
        int groupID = 0;
        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        SGLoginData sgLoginData = null;
        sgLoginData = (SGLoginData)HsCmdCenter.GetLoginData(groupID);
        if (sgLoginData == null)
            return;

        bool bSystem = sgLoginData.GetSystemPosition();
        string strConNetWork = sgLoginData.GetConnNetworkString();

        SGUserData sgUserData = null;
        sgUserData = (SGUserData)HsCmdCenter.GetUserData(groupID);
        if (sgUserData == null)
            return;

        string strUserSeq = sgUserData.GetUserSequence();
        string strDate = DateTime.Now.ToString("yyyyMMdd");

        string strUserID = sgLoginData.GetUserID();
        string strQuery = sgQuery.GetDayFileTransInfo(bSystem, strUserSeq, strDate, strConNetWork);
        HsCmdCenter.SendUseDayFileTransInfo(groupID, strUserID, strQuery);
    }

    /**
    *@brief 1일 클립보드 사용량 정보 요청
    */
    public void SendDayClipInfo()
    {

        CLog.Here().Information($"SendDayClipInfo");

        SGQueryExtend sgQuery = new SGQueryExtend();
        ISGSideBarUI sgSideBar = SideBarUISvc.ActiveMenu;
        int groupID = 0;
        if (sgSideBar != null)
            groupID = sgSideBar.GroupId;

        SGLoginData sgLoginData = null;
        sgLoginData = (SGLoginData)HsCmdCenter.GetLoginData(groupID);
        if (sgLoginData == null)
            return;

        bool bSystem = sgLoginData.GetSystemPosition();
        string strConNetWork = sgLoginData.GetConnNetworkString();

        SGUserData sgUserData = null;
        sgUserData = (SGUserData)HsCmdCenter.GetUserData(groupID);
        if (sgUserData == null)
            return;

        string strUserSeq = sgUserData.GetUserSequence();
        string strDate = DateTime.Now.ToString("yyyyMMdd");

        string strUserID = sgLoginData.GetUserID();
        string strQuery = sgQuery.GetDayClipboardInfo(bSystem, strUserSeq, strDate, strConNetWork);
        HsCmdCenter.SendUseDayClipboardInfo(groupID, strUserID, strQuery);
    }

    /// <summary>
    /// 공통환경설정 변경에 따른 UI 변경사항 반영 적용
    /// </summary>
    /// <param name="groupid"></param>
    public void RefreshUI(int groupid)
    {
        StateHasChanged();
    }

}

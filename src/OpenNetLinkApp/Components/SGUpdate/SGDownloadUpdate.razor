@using System
@using System.Collections.Generic
@using System.Linq

@using Serilog
@using Serilog.Events
@using AgLogManager

@using System.Runtime.InteropServices

@inject ISGAppManagerService SGAppMgrSvc
@inject WebWindow Window
@inject XmlConfService XmlConf
@inject HSCmdCenter HsCmdCenter
@inject IJSRuntime JSRuntime

<div class="modal fade" id="modal-downloadupdate" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-default1">
        <div class="modal-content">
            <div class="modal-header-default">
                <div class="modal-title"><i class="fas fa-cog blue-txt mr-2 "></i>소프트웨어 업데이트</div>
                <!--<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
                </button>-->
            </div>
            <div class="modal-body-default_up" >
            <!-- content -->

                <div class=" alert_txt ">
                    <label class="mb-3" style="font-size:20px; color:black;">
                    <i class="fas fa-download pr-2" style="color:#609c00; "></i>Downloading... 
                    </label>	
                    <div style=" font-size:15px; color:#001a9c; font-weight: normal; padding-bottom:5px;">
                    @((MarkupString)DownloadInfo)
                    </div>		
                    
                    <div class="progress progress-sm mb-2" style="position: relative; border-radius:3px">
                        <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: @(IndicatorProgress)%;  border-radius: 3px"></div>
                    </div>
                </div>

            <!--/. content -->
            </div>
            <div class="modal-footer-default ">
                <button type="button" class="btn bg-gradient-secondary pl-4 pr-4 mr-0 " @onclick="@(OnClosePopUp.InvokeAsync)">닫기</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

@code
{
    [Parameter] 
    public ISGCtrlSideUIService CtrlSideUISvc { get; set; }

    [Parameter]
    public EventCallback OnClosePopUp { get; set; }

    public string DownloadInfo { get; set; } = "NetSparkle.Samples.NetCore.Avalonia 2.0";
    public int IndicatorProgress { get; set; } = 70;

    private static Serilog.ILogger CLog => Serilog.Log.ForContext<SGDownloadUpdate>();

    public async void OpenPopUp(string downloadInfo)
    {
        CLog.Here().Information($"- OpenDownloadUpdate");

        DownloadInfo = downloadInfo;
        IndicatorProgress = 0;
        CtrlSideUISvc.EmitNotifyStateChangedCtrlSide();

        object[] param = { "modal-downloadupdate" };
        await JSRuntime.InvokeAsync<object>("openPopUp", param);
        object[] param2 = { "1000" };
        await JSRuntime.InvokeAsync<object>("changeModalZIndex", param2);
        object[] param3 = { "black" };
        await JSRuntime.InvokeAsync<object>("changeModalFontColor", param3);
    }

    public async void ClosePopUp()
    {
        CLog.Here().Information($"- CloseDownloadUpdate");
        object[] param = { "modal-downloadupdate" };
        await JSRuntime.InvokeAsync<object>("closePopUp", param);
        object[] param2 = { "1024" };
        await JSRuntime.InvokeAsync<object>("changeModalZIndex", param2);
        object[] param3 = { "#C2C7D0" };
        await JSRuntime.InvokeAsync<object>("changeModalFontColor", param3);
    }

    public async void UpdateProgress(string downloadInfo, int indicatorProgress)
    {
        await Task.Run(() => {
            DownloadInfo = downloadInfo;
            IndicatorProgress = indicatorProgress;
            CtrlSideUISvc.EmitNotifyStateChangedCtrlSide();
        });
    }
}

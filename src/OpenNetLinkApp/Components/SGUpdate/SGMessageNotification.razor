@using System
@using System.Collections.Generic
@using System.Linq

@using Serilog
@using Serilog.Events
@using AgLogManager

@using System.Runtime.InteropServices

@inject ISGAppManagerService SGAppMgrSvc
@inject WebWindow Window
@inject XmlConfService XmlConf
@inject HSCmdCenter HsCmdCenter
@inject IJSRuntime JSRuntime

<div class="modal fade" id="modal-messagenotification" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-default1">
        <div class="modal-content">
            <div class="modal-header-default">
                <div class="modal-title"><i class="fas fa-cog blue-txt mr-2 "></i>정보</div>
                <!--<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
                </button>-->
            </div>
            <div class="modal-body-default_up" style="backgroudn-color:#ececec !important;" >
            <!-- content -->

                <div class=" alert_txt text-center">
                    <div class="col-md-12 p-4" style="font-size:40px; color:#d80046;"><i class="fas fa-exclamation-circle "></i></div>
                    <label class="mb-1" style="font-size:20px; padding-bottom:18px; color:black;">
                    @*You have elected to skip this version.*@
                    @((MarkupString)CauseDescription)
                    </label>				 
                    
                </div>

            <!--/. content -->
            </div>
            <div class="modal-footer-default ">
                <button type="button" class="btn bg-gradient-secondary pl-4 pr-4 mr-0 " @onclick="@(OnClosePopUp.InvokeAsync)">닫기</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

@code
{
    [Parameter] 
    public ISGCtrlSideUIService CtrlSideUISvc { get; set; }
    [Parameter]
    public EventCallback OnClosePopUp { get; set; }

    private string CauseDescription { get; set; }
    private static Serilog.ILogger CLog => Serilog.Log.ForContext<SGMessageNotification>();

    public async void OpenPopUp(string causeDescription)
    {
        CLog.Here().Information($"- OpenMessageNotification");

        CauseDescription = causeDescription;
        CtrlSideUISvc.EmitNotifyStateChangedCtrlSide();

        object[] param = { "modal-messagenotification" };
        await JSRuntime.InvokeAsync<object>("openPopUp", param);
        object[] param2 = { "1000" };
        await JSRuntime.InvokeAsync<object>("changeModalZIndex", param2);
        object[] param3 = { "black" };
        await JSRuntime.InvokeAsync<object>("changeModalFontColor", param3);
    }

    public async void ClosePopUp()
    {
        CLog.Here().Information($"- CloseMessageNotification");
        object[] param = { "modal-messagenotification" };
        await JSRuntime.InvokeAsync<object>("closePopUp", param);
        object[] param2 = { "1024" };
        await JSRuntime.InvokeAsync<object>("changeModalZIndex", param2);
        object[] param3 = { "#C2C7D0" };
        await JSRuntime.InvokeAsync<object>("changeModalFontColor", param3);
    }
}